// Code generated by protoc-gen-go. DO NOT EDIT.
// source: spdk.proto

package spdkrpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReplicaMode int32

const (
	ReplicaMode_WO  ReplicaMode = 0
	ReplicaMode_RW  ReplicaMode = 1
	ReplicaMode_ERR ReplicaMode = 2
)

var ReplicaMode_name = map[int32]string{
	0: "WO",
	1: "RW",
	2: "ERR",
}

var ReplicaMode_value = map[string]int32{
	"WO":  0,
	"RW":  1,
	"ERR": 2,
}

func (x ReplicaMode) String() string {
	return proto.EnumName(ReplicaMode_name, int32(x))
}

func (ReplicaMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{0}
}

type Lvol struct {
	Name                 string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uuid                 string          `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	SpecSize             uint64          `protobuf:"varint,3,opt,name=spec_size,json=specSize,proto3" json:"spec_size,omitempty"`
	ActualSize           uint64          `protobuf:"varint,4,opt,name=actual_size,json=actualSize,proto3" json:"actual_size,omitempty"`
	Parent               string          `protobuf:"bytes,5,opt,name=parent,proto3" json:"parent,omitempty"`
	Children             map[string]bool `protobuf:"bytes,6,rep,name=children,proto3" json:"children,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	CreationTime         string          `protobuf:"bytes,7,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Lvol) Reset()         { *m = Lvol{} }
func (m *Lvol) String() string { return proto.CompactTextString(m) }
func (*Lvol) ProtoMessage()    {}
func (*Lvol) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{0}
}

func (m *Lvol) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Lvol.Unmarshal(m, b)
}
func (m *Lvol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Lvol.Marshal(b, m, deterministic)
}
func (m *Lvol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Lvol.Merge(m, src)
}
func (m *Lvol) XXX_Size() int {
	return xxx_messageInfo_Lvol.Size(m)
}
func (m *Lvol) XXX_DiscardUnknown() {
	xxx_messageInfo_Lvol.DiscardUnknown(m)
}

var xxx_messageInfo_Lvol proto.InternalMessageInfo

func (m *Lvol) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Lvol) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Lvol) GetSpecSize() uint64 {
	if m != nil {
		return m.SpecSize
	}
	return 0
}

func (m *Lvol) GetActualSize() uint64 {
	if m != nil {
		return m.ActualSize
	}
	return 0
}

func (m *Lvol) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *Lvol) GetChildren() map[string]bool {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *Lvol) GetCreationTime() string {
	if m != nil {
		return m.CreationTime
	}
	return ""
}

type Replica struct {
	Name                 string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uuid                 string           `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	LvsName              string           `protobuf:"bytes,3,opt,name=lvs_name,json=lvsName,proto3" json:"lvs_name,omitempty"`
	LvsUuid              string           `protobuf:"bytes,4,opt,name=lvs_uuid,json=lvsUuid,proto3" json:"lvs_uuid,omitempty"`
	SpecSize             uint64           `protobuf:"varint,5,opt,name=spec_size,json=specSize,proto3" json:"spec_size,omitempty"`
	ActualSize           uint64           `protobuf:"varint,6,opt,name=actual_size,json=actualSize,proto3" json:"actual_size,omitempty"`
	Ip                   string           `protobuf:"bytes,7,opt,name=ip,proto3" json:"ip,omitempty"`
	PortStart            int32            `protobuf:"varint,8,opt,name=port_start,json=portStart,proto3" json:"port_start,omitempty"`
	PortEnd              int32            `protobuf:"varint,9,opt,name=port_end,json=portEnd,proto3" json:"port_end,omitempty"`
	Snapshots            map[string]*Lvol `protobuf:"bytes,10,rep,name=snapshots,proto3" json:"snapshots,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Rebuilding           bool             `protobuf:"varint,11,opt,name=rebuilding,proto3" json:"rebuilding,omitempty"`
	State                string           `protobuf:"bytes,12,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Replica) Reset()         { *m = Replica{} }
func (m *Replica) String() string { return proto.CompactTextString(m) }
func (*Replica) ProtoMessage()    {}
func (*Replica) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{1}
}

func (m *Replica) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Replica.Unmarshal(m, b)
}
func (m *Replica) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Replica.Marshal(b, m, deterministic)
}
func (m *Replica) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Replica.Merge(m, src)
}
func (m *Replica) XXX_Size() int {
	return xxx_messageInfo_Replica.Size(m)
}
func (m *Replica) XXX_DiscardUnknown() {
	xxx_messageInfo_Replica.DiscardUnknown(m)
}

var xxx_messageInfo_Replica proto.InternalMessageInfo

func (m *Replica) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Replica) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Replica) GetLvsName() string {
	if m != nil {
		return m.LvsName
	}
	return ""
}

func (m *Replica) GetLvsUuid() string {
	if m != nil {
		return m.LvsUuid
	}
	return ""
}

func (m *Replica) GetSpecSize() uint64 {
	if m != nil {
		return m.SpecSize
	}
	return 0
}

func (m *Replica) GetActualSize() uint64 {
	if m != nil {
		return m.ActualSize
	}
	return 0
}

func (m *Replica) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Replica) GetPortStart() int32 {
	if m != nil {
		return m.PortStart
	}
	return 0
}

func (m *Replica) GetPortEnd() int32 {
	if m != nil {
		return m.PortEnd
	}
	return 0
}

func (m *Replica) GetSnapshots() map[string]*Lvol {
	if m != nil {
		return m.Snapshots
	}
	return nil
}

func (m *Replica) GetRebuilding() bool {
	if m != nil {
		return m.Rebuilding
	}
	return false
}

func (m *Replica) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type ReplicaCreateRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	LvsName              string   `protobuf:"bytes,2,opt,name=lvs_name,json=lvsName,proto3" json:"lvs_name,omitempty"`
	LvsUuid              string   `protobuf:"bytes,3,opt,name=lvs_uuid,json=lvsUuid,proto3" json:"lvs_uuid,omitempty"`
	SpecSize             uint64   `protobuf:"varint,4,opt,name=spec_size,json=specSize,proto3" json:"spec_size,omitempty"`
	ExposeRequired       bool     `protobuf:"varint,5,opt,name=expose_required,json=exposeRequired,proto3" json:"expose_required,omitempty"`
	PortCount            int32    `protobuf:"varint,6,opt,name=port_count,json=portCount,proto3" json:"port_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaCreateRequest) Reset()         { *m = ReplicaCreateRequest{} }
func (m *ReplicaCreateRequest) String() string { return proto.CompactTextString(m) }
func (*ReplicaCreateRequest) ProtoMessage()    {}
func (*ReplicaCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{2}
}

func (m *ReplicaCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaCreateRequest.Unmarshal(m, b)
}
func (m *ReplicaCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaCreateRequest.Marshal(b, m, deterministic)
}
func (m *ReplicaCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaCreateRequest.Merge(m, src)
}
func (m *ReplicaCreateRequest) XXX_Size() int {
	return xxx_messageInfo_ReplicaCreateRequest.Size(m)
}
func (m *ReplicaCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaCreateRequest proto.InternalMessageInfo

func (m *ReplicaCreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReplicaCreateRequest) GetLvsName() string {
	if m != nil {
		return m.LvsName
	}
	return ""
}

func (m *ReplicaCreateRequest) GetLvsUuid() string {
	if m != nil {
		return m.LvsUuid
	}
	return ""
}

func (m *ReplicaCreateRequest) GetSpecSize() uint64 {
	if m != nil {
		return m.SpecSize
	}
	return 0
}

func (m *ReplicaCreateRequest) GetExposeRequired() bool {
	if m != nil {
		return m.ExposeRequired
	}
	return false
}

func (m *ReplicaCreateRequest) GetPortCount() int32 {
	if m != nil {
		return m.PortCount
	}
	return 0
}

type ReplicaDeleteRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CleanupRequired      bool     `protobuf:"varint,2,opt,name=cleanup_required,json=cleanupRequired,proto3" json:"cleanup_required,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaDeleteRequest) Reset()         { *m = ReplicaDeleteRequest{} }
func (m *ReplicaDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*ReplicaDeleteRequest) ProtoMessage()    {}
func (*ReplicaDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{3}
}

func (m *ReplicaDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaDeleteRequest.Unmarshal(m, b)
}
func (m *ReplicaDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaDeleteRequest.Marshal(b, m, deterministic)
}
func (m *ReplicaDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaDeleteRequest.Merge(m, src)
}
func (m *ReplicaDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_ReplicaDeleteRequest.Size(m)
}
func (m *ReplicaDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaDeleteRequest proto.InternalMessageInfo

func (m *ReplicaDeleteRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReplicaDeleteRequest) GetCleanupRequired() bool {
	if m != nil {
		return m.CleanupRequired
	}
	return false
}

type ReplicaGetRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaGetRequest) Reset()         { *m = ReplicaGetRequest{} }
func (m *ReplicaGetRequest) String() string { return proto.CompactTextString(m) }
func (*ReplicaGetRequest) ProtoMessage()    {}
func (*ReplicaGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{4}
}

func (m *ReplicaGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaGetRequest.Unmarshal(m, b)
}
func (m *ReplicaGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaGetRequest.Marshal(b, m, deterministic)
}
func (m *ReplicaGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaGetRequest.Merge(m, src)
}
func (m *ReplicaGetRequest) XXX_Size() int {
	return xxx_messageInfo_ReplicaGetRequest.Size(m)
}
func (m *ReplicaGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaGetRequest proto.InternalMessageInfo

func (m *ReplicaGetRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ReplicaListResponse struct {
	Replicas             map[string]*Replica `protobuf:"bytes,1,rep,name=replicas,proto3" json:"replicas,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ReplicaListResponse) Reset()         { *m = ReplicaListResponse{} }
func (m *ReplicaListResponse) String() string { return proto.CompactTextString(m) }
func (*ReplicaListResponse) ProtoMessage()    {}
func (*ReplicaListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{5}
}

func (m *ReplicaListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaListResponse.Unmarshal(m, b)
}
func (m *ReplicaListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaListResponse.Marshal(b, m, deterministic)
}
func (m *ReplicaListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaListResponse.Merge(m, src)
}
func (m *ReplicaListResponse) XXX_Size() int {
	return xxx_messageInfo_ReplicaListResponse.Size(m)
}
func (m *ReplicaListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaListResponse proto.InternalMessageInfo

func (m *ReplicaListResponse) GetReplicas() map[string]*Replica {
	if m != nil {
		return m.Replicas
	}
	return nil
}

type ReplicaRebuildingSrcStartRequest struct {
	Name                     string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DstReplicaName           string   `protobuf:"bytes,2,opt,name=dst_replica_name,json=dstReplicaName,proto3" json:"dst_replica_name,omitempty"`
	DstRebuildingLvolAddress string   `protobuf:"bytes,3,opt,name=dst_rebuilding_lvol_address,json=dstRebuildingLvolAddress,proto3" json:"dst_rebuilding_lvol_address,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *ReplicaRebuildingSrcStartRequest) Reset()         { *m = ReplicaRebuildingSrcStartRequest{} }
func (m *ReplicaRebuildingSrcStartRequest) String() string { return proto.CompactTextString(m) }
func (*ReplicaRebuildingSrcStartRequest) ProtoMessage()    {}
func (*ReplicaRebuildingSrcStartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{6}
}

func (m *ReplicaRebuildingSrcStartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaRebuildingSrcStartRequest.Unmarshal(m, b)
}
func (m *ReplicaRebuildingSrcStartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaRebuildingSrcStartRequest.Marshal(b, m, deterministic)
}
func (m *ReplicaRebuildingSrcStartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaRebuildingSrcStartRequest.Merge(m, src)
}
func (m *ReplicaRebuildingSrcStartRequest) XXX_Size() int {
	return xxx_messageInfo_ReplicaRebuildingSrcStartRequest.Size(m)
}
func (m *ReplicaRebuildingSrcStartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaRebuildingSrcStartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaRebuildingSrcStartRequest proto.InternalMessageInfo

func (m *ReplicaRebuildingSrcStartRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReplicaRebuildingSrcStartRequest) GetDstReplicaName() string {
	if m != nil {
		return m.DstReplicaName
	}
	return ""
}

func (m *ReplicaRebuildingSrcStartRequest) GetDstRebuildingLvolAddress() string {
	if m != nil {
		return m.DstRebuildingLvolAddress
	}
	return ""
}

type ReplicaRebuildingSrcFinishRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DstReplicaName       string   `protobuf:"bytes,2,opt,name=dst_replica_name,json=dstReplicaName,proto3" json:"dst_replica_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaRebuildingSrcFinishRequest) Reset()         { *m = ReplicaRebuildingSrcFinishRequest{} }
func (m *ReplicaRebuildingSrcFinishRequest) String() string { return proto.CompactTextString(m) }
func (*ReplicaRebuildingSrcFinishRequest) ProtoMessage()    {}
func (*ReplicaRebuildingSrcFinishRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{7}
}

func (m *ReplicaRebuildingSrcFinishRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaRebuildingSrcFinishRequest.Unmarshal(m, b)
}
func (m *ReplicaRebuildingSrcFinishRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaRebuildingSrcFinishRequest.Marshal(b, m, deterministic)
}
func (m *ReplicaRebuildingSrcFinishRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaRebuildingSrcFinishRequest.Merge(m, src)
}
func (m *ReplicaRebuildingSrcFinishRequest) XXX_Size() int {
	return xxx_messageInfo_ReplicaRebuildingSrcFinishRequest.Size(m)
}
func (m *ReplicaRebuildingSrcFinishRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaRebuildingSrcFinishRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaRebuildingSrcFinishRequest proto.InternalMessageInfo

func (m *ReplicaRebuildingSrcFinishRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReplicaRebuildingSrcFinishRequest) GetDstReplicaName() string {
	if m != nil {
		return m.DstReplicaName
	}
	return ""
}

type ReplicaSnapshotShallowCopyRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SnapshotName         string   `protobuf:"bytes,2,opt,name=snapshot_name,json=snapshotName,proto3" json:"snapshot_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaSnapshotShallowCopyRequest) Reset()         { *m = ReplicaSnapshotShallowCopyRequest{} }
func (m *ReplicaSnapshotShallowCopyRequest) String() string { return proto.CompactTextString(m) }
func (*ReplicaSnapshotShallowCopyRequest) ProtoMessage()    {}
func (*ReplicaSnapshotShallowCopyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{8}
}

func (m *ReplicaSnapshotShallowCopyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaSnapshotShallowCopyRequest.Unmarshal(m, b)
}
func (m *ReplicaSnapshotShallowCopyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaSnapshotShallowCopyRequest.Marshal(b, m, deterministic)
}
func (m *ReplicaSnapshotShallowCopyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaSnapshotShallowCopyRequest.Merge(m, src)
}
func (m *ReplicaSnapshotShallowCopyRequest) XXX_Size() int {
	return xxx_messageInfo_ReplicaSnapshotShallowCopyRequest.Size(m)
}
func (m *ReplicaSnapshotShallowCopyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaSnapshotShallowCopyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaSnapshotShallowCopyRequest proto.InternalMessageInfo

func (m *ReplicaSnapshotShallowCopyRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReplicaSnapshotShallowCopyRequest) GetSnapshotName() string {
	if m != nil {
		return m.SnapshotName
	}
	return ""
}

type ReplicaRebuildingDstStartRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ExposeRequired       bool     `protobuf:"varint,2,opt,name=expose_required,json=exposeRequired,proto3" json:"expose_required,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaRebuildingDstStartRequest) Reset()         { *m = ReplicaRebuildingDstStartRequest{} }
func (m *ReplicaRebuildingDstStartRequest) String() string { return proto.CompactTextString(m) }
func (*ReplicaRebuildingDstStartRequest) ProtoMessage()    {}
func (*ReplicaRebuildingDstStartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{9}
}

func (m *ReplicaRebuildingDstStartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaRebuildingDstStartRequest.Unmarshal(m, b)
}
func (m *ReplicaRebuildingDstStartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaRebuildingDstStartRequest.Marshal(b, m, deterministic)
}
func (m *ReplicaRebuildingDstStartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaRebuildingDstStartRequest.Merge(m, src)
}
func (m *ReplicaRebuildingDstStartRequest) XXX_Size() int {
	return xxx_messageInfo_ReplicaRebuildingDstStartRequest.Size(m)
}
func (m *ReplicaRebuildingDstStartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaRebuildingDstStartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaRebuildingDstStartRequest proto.InternalMessageInfo

func (m *ReplicaRebuildingDstStartRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReplicaRebuildingDstStartRequest) GetExposeRequired() bool {
	if m != nil {
		return m.ExposeRequired
	}
	return false
}

type ReplicaRebuildingDstStartResponse struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaRebuildingDstStartResponse) Reset()         { *m = ReplicaRebuildingDstStartResponse{} }
func (m *ReplicaRebuildingDstStartResponse) String() string { return proto.CompactTextString(m) }
func (*ReplicaRebuildingDstStartResponse) ProtoMessage()    {}
func (*ReplicaRebuildingDstStartResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{10}
}

func (m *ReplicaRebuildingDstStartResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaRebuildingDstStartResponse.Unmarshal(m, b)
}
func (m *ReplicaRebuildingDstStartResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaRebuildingDstStartResponse.Marshal(b, m, deterministic)
}
func (m *ReplicaRebuildingDstStartResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaRebuildingDstStartResponse.Merge(m, src)
}
func (m *ReplicaRebuildingDstStartResponse) XXX_Size() int {
	return xxx_messageInfo_ReplicaRebuildingDstStartResponse.Size(m)
}
func (m *ReplicaRebuildingDstStartResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaRebuildingDstStartResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaRebuildingDstStartResponse proto.InternalMessageInfo

func (m *ReplicaRebuildingDstStartResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type ReplicaRebuildingDstFinishRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	UnexposeRequired     bool     `protobuf:"varint,2,opt,name=unexpose_required,json=unexposeRequired,proto3" json:"unexpose_required,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaRebuildingDstFinishRequest) Reset()         { *m = ReplicaRebuildingDstFinishRequest{} }
func (m *ReplicaRebuildingDstFinishRequest) String() string { return proto.CompactTextString(m) }
func (*ReplicaRebuildingDstFinishRequest) ProtoMessage()    {}
func (*ReplicaRebuildingDstFinishRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{11}
}

func (m *ReplicaRebuildingDstFinishRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaRebuildingDstFinishRequest.Unmarshal(m, b)
}
func (m *ReplicaRebuildingDstFinishRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaRebuildingDstFinishRequest.Marshal(b, m, deterministic)
}
func (m *ReplicaRebuildingDstFinishRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaRebuildingDstFinishRequest.Merge(m, src)
}
func (m *ReplicaRebuildingDstFinishRequest) XXX_Size() int {
	return xxx_messageInfo_ReplicaRebuildingDstFinishRequest.Size(m)
}
func (m *ReplicaRebuildingDstFinishRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaRebuildingDstFinishRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaRebuildingDstFinishRequest proto.InternalMessageInfo

func (m *ReplicaRebuildingDstFinishRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReplicaRebuildingDstFinishRequest) GetUnexposeRequired() bool {
	if m != nil {
		return m.UnexposeRequired
	}
	return false
}

type Engine struct {
	Name                 string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	VolumeName           string                 `protobuf:"bytes,2,opt,name=volume_name,json=volumeName,proto3" json:"volume_name,omitempty"`
	SpecSize             uint64                 `protobuf:"varint,3,opt,name=spec_size,json=specSize,proto3" json:"spec_size,omitempty"`
	ActualSize           uint64                 `protobuf:"varint,4,opt,name=actual_size,json=actualSize,proto3" json:"actual_size,omitempty"`
	Ip                   string                 `protobuf:"bytes,5,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 int32                  `protobuf:"varint,6,opt,name=port,proto3" json:"port,omitempty"`
	ReplicaAddressMap    map[string]string      `protobuf:"bytes,7,rep,name=replica_address_map,json=replicaAddressMap,proto3" json:"replica_address_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ReplicaModeMap       map[string]ReplicaMode `protobuf:"bytes,8,rep,name=replica_mode_map,json=replicaModeMap,proto3" json:"replica_mode_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=spdkrpc.ReplicaMode"`
	Frontend             string                 `protobuf:"bytes,9,opt,name=frontend,proto3" json:"frontend,omitempty"`
	Endpoint             string                 `protobuf:"bytes,10,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	State                string                 `protobuf:"bytes,11,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Engine) Reset()         { *m = Engine{} }
func (m *Engine) String() string { return proto.CompactTextString(m) }
func (*Engine) ProtoMessage()    {}
func (*Engine) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{12}
}

func (m *Engine) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Engine.Unmarshal(m, b)
}
func (m *Engine) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Engine.Marshal(b, m, deterministic)
}
func (m *Engine) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Engine.Merge(m, src)
}
func (m *Engine) XXX_Size() int {
	return xxx_messageInfo_Engine.Size(m)
}
func (m *Engine) XXX_DiscardUnknown() {
	xxx_messageInfo_Engine.DiscardUnknown(m)
}

var xxx_messageInfo_Engine proto.InternalMessageInfo

func (m *Engine) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Engine) GetVolumeName() string {
	if m != nil {
		return m.VolumeName
	}
	return ""
}

func (m *Engine) GetSpecSize() uint64 {
	if m != nil {
		return m.SpecSize
	}
	return 0
}

func (m *Engine) GetActualSize() uint64 {
	if m != nil {
		return m.ActualSize
	}
	return 0
}

func (m *Engine) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Engine) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Engine) GetReplicaAddressMap() map[string]string {
	if m != nil {
		return m.ReplicaAddressMap
	}
	return nil
}

func (m *Engine) GetReplicaModeMap() map[string]ReplicaMode {
	if m != nil {
		return m.ReplicaModeMap
	}
	return nil
}

func (m *Engine) GetFrontend() string {
	if m != nil {
		return m.Frontend
	}
	return ""
}

func (m *Engine) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *Engine) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type EngineCreateRequest struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	VolumeName           string            `protobuf:"bytes,2,opt,name=volume_name,json=volumeName,proto3" json:"volume_name,omitempty"`
	SpecSize             uint64            `protobuf:"varint,3,opt,name=spec_size,json=specSize,proto3" json:"spec_size,omitempty"`
	ReplicaAddressMap    map[string]string `protobuf:"bytes,4,rep,name=replica_address_map,json=replicaAddressMap,proto3" json:"replica_address_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Frontend             string            `protobuf:"bytes,5,opt,name=frontend,proto3" json:"frontend,omitempty"`
	PortCount            int32             `protobuf:"varint,6,opt,name=port_count,json=portCount,proto3" json:"port_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *EngineCreateRequest) Reset()         { *m = EngineCreateRequest{} }
func (m *EngineCreateRequest) String() string { return proto.CompactTextString(m) }
func (*EngineCreateRequest) ProtoMessage()    {}
func (*EngineCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{13}
}

func (m *EngineCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EngineCreateRequest.Unmarshal(m, b)
}
func (m *EngineCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EngineCreateRequest.Marshal(b, m, deterministic)
}
func (m *EngineCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EngineCreateRequest.Merge(m, src)
}
func (m *EngineCreateRequest) XXX_Size() int {
	return xxx_messageInfo_EngineCreateRequest.Size(m)
}
func (m *EngineCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EngineCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EngineCreateRequest proto.InternalMessageInfo

func (m *EngineCreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EngineCreateRequest) GetVolumeName() string {
	if m != nil {
		return m.VolumeName
	}
	return ""
}

func (m *EngineCreateRequest) GetSpecSize() uint64 {
	if m != nil {
		return m.SpecSize
	}
	return 0
}

func (m *EngineCreateRequest) GetReplicaAddressMap() map[string]string {
	if m != nil {
		return m.ReplicaAddressMap
	}
	return nil
}

func (m *EngineCreateRequest) GetFrontend() string {
	if m != nil {
		return m.Frontend
	}
	return ""
}

func (m *EngineCreateRequest) GetPortCount() int32 {
	if m != nil {
		return m.PortCount
	}
	return 0
}

type EngineDeleteRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EngineDeleteRequest) Reset()         { *m = EngineDeleteRequest{} }
func (m *EngineDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*EngineDeleteRequest) ProtoMessage()    {}
func (*EngineDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{14}
}

func (m *EngineDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EngineDeleteRequest.Unmarshal(m, b)
}
func (m *EngineDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EngineDeleteRequest.Marshal(b, m, deterministic)
}
func (m *EngineDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EngineDeleteRequest.Merge(m, src)
}
func (m *EngineDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_EngineDeleteRequest.Size(m)
}
func (m *EngineDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EngineDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EngineDeleteRequest proto.InternalMessageInfo

func (m *EngineDeleteRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type EngineGetRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EngineGetRequest) Reset()         { *m = EngineGetRequest{} }
func (m *EngineGetRequest) String() string { return proto.CompactTextString(m) }
func (*EngineGetRequest) ProtoMessage()    {}
func (*EngineGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{15}
}

func (m *EngineGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EngineGetRequest.Unmarshal(m, b)
}
func (m *EngineGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EngineGetRequest.Marshal(b, m, deterministic)
}
func (m *EngineGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EngineGetRequest.Merge(m, src)
}
func (m *EngineGetRequest) XXX_Size() int {
	return xxx_messageInfo_EngineGetRequest.Size(m)
}
func (m *EngineGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EngineGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EngineGetRequest proto.InternalMessageInfo

func (m *EngineGetRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type EngineListResponse struct {
	Engines              map[string]*Engine `protobuf:"bytes,1,rep,name=engines,proto3" json:"engines,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *EngineListResponse) Reset()         { *m = EngineListResponse{} }
func (m *EngineListResponse) String() string { return proto.CompactTextString(m) }
func (*EngineListResponse) ProtoMessage()    {}
func (*EngineListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{16}
}

func (m *EngineListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EngineListResponse.Unmarshal(m, b)
}
func (m *EngineListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EngineListResponse.Marshal(b, m, deterministic)
}
func (m *EngineListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EngineListResponse.Merge(m, src)
}
func (m *EngineListResponse) XXX_Size() int {
	return xxx_messageInfo_EngineListResponse.Size(m)
}
func (m *EngineListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EngineListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EngineListResponse proto.InternalMessageInfo

func (m *EngineListResponse) GetEngines() map[string]*Engine {
	if m != nil {
		return m.Engines
	}
	return nil
}

type EngineReplicaAddRequest struct {
	EngineName           string   `protobuf:"bytes,1,opt,name=engine_name,json=engineName,proto3" json:"engine_name,omitempty"`
	ReplicaName          string   `protobuf:"bytes,2,opt,name=replica_name,json=replicaName,proto3" json:"replica_name,omitempty"`
	ReplicaAddress       string   `protobuf:"bytes,3,opt,name=replica_address,json=replicaAddress,proto3" json:"replica_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EngineReplicaAddRequest) Reset()         { *m = EngineReplicaAddRequest{} }
func (m *EngineReplicaAddRequest) String() string { return proto.CompactTextString(m) }
func (*EngineReplicaAddRequest) ProtoMessage()    {}
func (*EngineReplicaAddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{17}
}

func (m *EngineReplicaAddRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EngineReplicaAddRequest.Unmarshal(m, b)
}
func (m *EngineReplicaAddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EngineReplicaAddRequest.Marshal(b, m, deterministic)
}
func (m *EngineReplicaAddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EngineReplicaAddRequest.Merge(m, src)
}
func (m *EngineReplicaAddRequest) XXX_Size() int {
	return xxx_messageInfo_EngineReplicaAddRequest.Size(m)
}
func (m *EngineReplicaAddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EngineReplicaAddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EngineReplicaAddRequest proto.InternalMessageInfo

func (m *EngineReplicaAddRequest) GetEngineName() string {
	if m != nil {
		return m.EngineName
	}
	return ""
}

func (m *EngineReplicaAddRequest) GetReplicaName() string {
	if m != nil {
		return m.ReplicaName
	}
	return ""
}

func (m *EngineReplicaAddRequest) GetReplicaAddress() string {
	if m != nil {
		return m.ReplicaAddress
	}
	return ""
}

type EngineReplicaListRequest struct {
	EngineName           string   `protobuf:"bytes,1,opt,name=engine_name,json=engineName,proto3" json:"engine_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EngineReplicaListRequest) Reset()         { *m = EngineReplicaListRequest{} }
func (m *EngineReplicaListRequest) String() string { return proto.CompactTextString(m) }
func (*EngineReplicaListRequest) ProtoMessage()    {}
func (*EngineReplicaListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{18}
}

func (m *EngineReplicaListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EngineReplicaListRequest.Unmarshal(m, b)
}
func (m *EngineReplicaListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EngineReplicaListRequest.Marshal(b, m, deterministic)
}
func (m *EngineReplicaListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EngineReplicaListRequest.Merge(m, src)
}
func (m *EngineReplicaListRequest) XXX_Size() int {
	return xxx_messageInfo_EngineReplicaListRequest.Size(m)
}
func (m *EngineReplicaListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EngineReplicaListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EngineReplicaListRequest proto.InternalMessageInfo

func (m *EngineReplicaListRequest) GetEngineName() string {
	if m != nil {
		return m.EngineName
	}
	return ""
}

type EngineReplicaListResponse struct {
	Replicas             map[string]*Replica `protobuf:"bytes,1,rep,name=replicas,proto3" json:"replicas,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *EngineReplicaListResponse) Reset()         { *m = EngineReplicaListResponse{} }
func (m *EngineReplicaListResponse) String() string { return proto.CompactTextString(m) }
func (*EngineReplicaListResponse) ProtoMessage()    {}
func (*EngineReplicaListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{19}
}

func (m *EngineReplicaListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EngineReplicaListResponse.Unmarshal(m, b)
}
func (m *EngineReplicaListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EngineReplicaListResponse.Marshal(b, m, deterministic)
}
func (m *EngineReplicaListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EngineReplicaListResponse.Merge(m, src)
}
func (m *EngineReplicaListResponse) XXX_Size() int {
	return xxx_messageInfo_EngineReplicaListResponse.Size(m)
}
func (m *EngineReplicaListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EngineReplicaListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EngineReplicaListResponse proto.InternalMessageInfo

func (m *EngineReplicaListResponse) GetReplicas() map[string]*Replica {
	if m != nil {
		return m.Replicas
	}
	return nil
}

type EngineReplicaDeleteRequest struct {
	EngineName           string   `protobuf:"bytes,1,opt,name=engine_name,json=engineName,proto3" json:"engine_name,omitempty"`
	ReplicaName          string   `protobuf:"bytes,2,opt,name=replica_name,json=replicaName,proto3" json:"replica_name,omitempty"`
	ReplicaAddress       string   `protobuf:"bytes,3,opt,name=replica_address,json=replicaAddress,proto3" json:"replica_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EngineReplicaDeleteRequest) Reset()         { *m = EngineReplicaDeleteRequest{} }
func (m *EngineReplicaDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*EngineReplicaDeleteRequest) ProtoMessage()    {}
func (*EngineReplicaDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{20}
}

func (m *EngineReplicaDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EngineReplicaDeleteRequest.Unmarshal(m, b)
}
func (m *EngineReplicaDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EngineReplicaDeleteRequest.Marshal(b, m, deterministic)
}
func (m *EngineReplicaDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EngineReplicaDeleteRequest.Merge(m, src)
}
func (m *EngineReplicaDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_EngineReplicaDeleteRequest.Size(m)
}
func (m *EngineReplicaDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EngineReplicaDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EngineReplicaDeleteRequest proto.InternalMessageInfo

func (m *EngineReplicaDeleteRequest) GetEngineName() string {
	if m != nil {
		return m.EngineName
	}
	return ""
}

func (m *EngineReplicaDeleteRequest) GetReplicaName() string {
	if m != nil {
		return m.ReplicaName
	}
	return ""
}

func (m *EngineReplicaDeleteRequest) GetReplicaAddress() string {
	if m != nil {
		return m.ReplicaAddress
	}
	return ""
}

type SnapshotRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SnapshotName         string   `protobuf:"bytes,2,opt,name=snapshot_name,json=snapshotName,proto3" json:"snapshot_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnapshotRequest) Reset()         { *m = SnapshotRequest{} }
func (m *SnapshotRequest) String() string { return proto.CompactTextString(m) }
func (*SnapshotRequest) ProtoMessage()    {}
func (*SnapshotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{21}
}

func (m *SnapshotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapshotRequest.Unmarshal(m, b)
}
func (m *SnapshotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapshotRequest.Marshal(b, m, deterministic)
}
func (m *SnapshotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapshotRequest.Merge(m, src)
}
func (m *SnapshotRequest) XXX_Size() int {
	return xxx_messageInfo_SnapshotRequest.Size(m)
}
func (m *SnapshotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapshotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SnapshotRequest proto.InternalMessageInfo

func (m *SnapshotRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SnapshotRequest) GetSnapshotName() string {
	if m != nil {
		return m.SnapshotName
	}
	return ""
}

type VersionOutput struct {
	Version                 string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	GitCommit               string   `protobuf:"bytes,2,opt,name=gitCommit,proto3" json:"gitCommit,omitempty"`
	BuildDate               string   `protobuf:"bytes,3,opt,name=buildDate,proto3" json:"buildDate,omitempty"`
	CliAPIVersion           int64    `protobuf:"varint,4,opt,name=cliAPIVersion,proto3" json:"cliAPIVersion,omitempty"`
	CliAPIMinVersion        int64    `protobuf:"varint,5,opt,name=cliAPIMinVersion,proto3" json:"cliAPIMinVersion,omitempty"`
	ControllerAPIVersion    int64    `protobuf:"varint,6,opt,name=controllerAPIVersion,proto3" json:"controllerAPIVersion,omitempty"`
	ControllerAPIMinVersion int64    `protobuf:"varint,7,opt,name=controllerAPIMinVersion,proto3" json:"controllerAPIMinVersion,omitempty"`
	DataFormatVersion       int64    `protobuf:"varint,8,opt,name=dataFormatVersion,proto3" json:"dataFormatVersion,omitempty"`
	DataFormatMinVersion    int64    `protobuf:"varint,9,opt,name=dataFormatMinVersion,proto3" json:"dataFormatMinVersion,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *VersionOutput) Reset()         { *m = VersionOutput{} }
func (m *VersionOutput) String() string { return proto.CompactTextString(m) }
func (*VersionOutput) ProtoMessage()    {}
func (*VersionOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{22}
}

func (m *VersionOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionOutput.Unmarshal(m, b)
}
func (m *VersionOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionOutput.Marshal(b, m, deterministic)
}
func (m *VersionOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionOutput.Merge(m, src)
}
func (m *VersionOutput) XXX_Size() int {
	return xxx_messageInfo_VersionOutput.Size(m)
}
func (m *VersionOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionOutput.DiscardUnknown(m)
}

var xxx_messageInfo_VersionOutput proto.InternalMessageInfo

func (m *VersionOutput) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *VersionOutput) GetGitCommit() string {
	if m != nil {
		return m.GitCommit
	}
	return ""
}

func (m *VersionOutput) GetBuildDate() string {
	if m != nil {
		return m.BuildDate
	}
	return ""
}

func (m *VersionOutput) GetCliAPIVersion() int64 {
	if m != nil {
		return m.CliAPIVersion
	}
	return 0
}

func (m *VersionOutput) GetCliAPIMinVersion() int64 {
	if m != nil {
		return m.CliAPIMinVersion
	}
	return 0
}

func (m *VersionOutput) GetControllerAPIVersion() int64 {
	if m != nil {
		return m.ControllerAPIVersion
	}
	return 0
}

func (m *VersionOutput) GetControllerAPIMinVersion() int64 {
	if m != nil {
		return m.ControllerAPIMinVersion
	}
	return 0
}

func (m *VersionOutput) GetDataFormatVersion() int64 {
	if m != nil {
		return m.DataFormatVersion
	}
	return 0
}

func (m *VersionOutput) GetDataFormatMinVersion() int64 {
	if m != nil {
		return m.DataFormatMinVersion
	}
	return 0
}

type VersionDetailGetReply struct {
	Version              *VersionOutput `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *VersionDetailGetReply) Reset()         { *m = VersionDetailGetReply{} }
func (m *VersionDetailGetReply) String() string { return proto.CompactTextString(m) }
func (*VersionDetailGetReply) ProtoMessage()    {}
func (*VersionDetailGetReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{23}
}

func (m *VersionDetailGetReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionDetailGetReply.Unmarshal(m, b)
}
func (m *VersionDetailGetReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionDetailGetReply.Marshal(b, m, deterministic)
}
func (m *VersionDetailGetReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionDetailGetReply.Merge(m, src)
}
func (m *VersionDetailGetReply) XXX_Size() int {
	return xxx_messageInfo_VersionDetailGetReply.Size(m)
}
func (m *VersionDetailGetReply) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionDetailGetReply.DiscardUnknown(m)
}

var xxx_messageInfo_VersionDetailGetReply proto.InternalMessageInfo

func (m *VersionDetailGetReply) GetVersion() *VersionOutput {
	if m != nil {
		return m.Version
	}
	return nil
}

type BackupCreateRequest struct {
	SnapshotName         string            `protobuf:"bytes,1,opt,name=snapshot_name,json=snapshotName,proto3" json:"snapshot_name,omitempty"`
	BackupTarget         string            `protobuf:"bytes,2,opt,name=backup_target,json=backupTarget,proto3" json:"backup_target,omitempty"`
	VolumeName           string            `protobuf:"bytes,3,opt,name=volume_name,json=volumeName,proto3" json:"volume_name,omitempty"`
	Size                 int64             `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	EngineName           string            `protobuf:"bytes,5,opt,name=engine_name,json=engineName,proto3" json:"engine_name,omitempty"`
	ReplicaName          string            `protobuf:"bytes,6,opt,name=replica_name,json=replicaName,proto3" json:"replica_name,omitempty"`
	Labels               []string          `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty"`
	Credential           map[string]string `protobuf:"bytes,8,rep,name=credential,proto3" json:"credential,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	BackingImageName     string            `protobuf:"bytes,9,opt,name=backing_image_name,json=backingImageName,proto3" json:"backing_image_name,omitempty"`
	BackingImageChecksum string            `protobuf:"bytes,10,opt,name=backing_image_checksum,json=backingImageChecksum,proto3" json:"backing_image_checksum,omitempty"`
	BackupName           string            `protobuf:"bytes,11,opt,name=backup_name,json=backupName,proto3" json:"backup_name,omitempty"`
	CompressionMethod    string            `protobuf:"bytes,12,opt,name=compression_method,json=compressionMethod,proto3" json:"compression_method,omitempty"`
	ConcurrentLimit      int32             `protobuf:"varint,13,opt,name=concurrent_limit,json=concurrentLimit,proto3" json:"concurrent_limit,omitempty"`
	StorageClassName     string            `protobuf:"bytes,14,opt,name=storage_class_name,json=storageClassName,proto3" json:"storage_class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *BackupCreateRequest) Reset()         { *m = BackupCreateRequest{} }
func (m *BackupCreateRequest) String() string { return proto.CompactTextString(m) }
func (*BackupCreateRequest) ProtoMessage()    {}
func (*BackupCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{24}
}

func (m *BackupCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackupCreateRequest.Unmarshal(m, b)
}
func (m *BackupCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackupCreateRequest.Marshal(b, m, deterministic)
}
func (m *BackupCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackupCreateRequest.Merge(m, src)
}
func (m *BackupCreateRequest) XXX_Size() int {
	return xxx_messageInfo_BackupCreateRequest.Size(m)
}
func (m *BackupCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BackupCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BackupCreateRequest proto.InternalMessageInfo

func (m *BackupCreateRequest) GetSnapshotName() string {
	if m != nil {
		return m.SnapshotName
	}
	return ""
}

func (m *BackupCreateRequest) GetBackupTarget() string {
	if m != nil {
		return m.BackupTarget
	}
	return ""
}

func (m *BackupCreateRequest) GetVolumeName() string {
	if m != nil {
		return m.VolumeName
	}
	return ""
}

func (m *BackupCreateRequest) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *BackupCreateRequest) GetEngineName() string {
	if m != nil {
		return m.EngineName
	}
	return ""
}

func (m *BackupCreateRequest) GetReplicaName() string {
	if m != nil {
		return m.ReplicaName
	}
	return ""
}

func (m *BackupCreateRequest) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *BackupCreateRequest) GetCredential() map[string]string {
	if m != nil {
		return m.Credential
	}
	return nil
}

func (m *BackupCreateRequest) GetBackingImageName() string {
	if m != nil {
		return m.BackingImageName
	}
	return ""
}

func (m *BackupCreateRequest) GetBackingImageChecksum() string {
	if m != nil {
		return m.BackingImageChecksum
	}
	return ""
}

func (m *BackupCreateRequest) GetBackupName() string {
	if m != nil {
		return m.BackupName
	}
	return ""
}

func (m *BackupCreateRequest) GetCompressionMethod() string {
	if m != nil {
		return m.CompressionMethod
	}
	return ""
}

func (m *BackupCreateRequest) GetConcurrentLimit() int32 {
	if m != nil {
		return m.ConcurrentLimit
	}
	return 0
}

func (m *BackupCreateRequest) GetStorageClassName() string {
	if m != nil {
		return m.StorageClassName
	}
	return ""
}

type BackupCreateResponse struct {
	Backup               string   `protobuf:"bytes,1,opt,name=backup,proto3" json:"backup,omitempty"`
	IsIncremental        bool     `protobuf:"varint,2,opt,name=is_incremental,json=isIncremental,proto3" json:"is_incremental,omitempty"`
	ReplicaAddress       string   `protobuf:"bytes,3,opt,name=replica_address,json=replicaAddress,proto3" json:"replica_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackupCreateResponse) Reset()         { *m = BackupCreateResponse{} }
func (m *BackupCreateResponse) String() string { return proto.CompactTextString(m) }
func (*BackupCreateResponse) ProtoMessage()    {}
func (*BackupCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{25}
}

func (m *BackupCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackupCreateResponse.Unmarshal(m, b)
}
func (m *BackupCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackupCreateResponse.Marshal(b, m, deterministic)
}
func (m *BackupCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackupCreateResponse.Merge(m, src)
}
func (m *BackupCreateResponse) XXX_Size() int {
	return xxx_messageInfo_BackupCreateResponse.Size(m)
}
func (m *BackupCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BackupCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BackupCreateResponse proto.InternalMessageInfo

func (m *BackupCreateResponse) GetBackup() string {
	if m != nil {
		return m.Backup
	}
	return ""
}

func (m *BackupCreateResponse) GetIsIncremental() bool {
	if m != nil {
		return m.IsIncremental
	}
	return false
}

func (m *BackupCreateResponse) GetReplicaAddress() string {
	if m != nil {
		return m.ReplicaAddress
	}
	return ""
}

type BackupStatusRequest struct {
	Backup               string   `protobuf:"bytes,1,opt,name=backup,proto3" json:"backup,omitempty"`
	EngineName           string   `protobuf:"bytes,2,opt,name=engine_name,json=engineName,proto3" json:"engine_name,omitempty"`
	ReplicaAddress       string   `protobuf:"bytes,3,opt,name=replica_address,json=replicaAddress,proto3" json:"replica_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackupStatusRequest) Reset()         { *m = BackupStatusRequest{} }
func (m *BackupStatusRequest) String() string { return proto.CompactTextString(m) }
func (*BackupStatusRequest) ProtoMessage()    {}
func (*BackupStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{26}
}

func (m *BackupStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackupStatusRequest.Unmarshal(m, b)
}
func (m *BackupStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackupStatusRequest.Marshal(b, m, deterministic)
}
func (m *BackupStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackupStatusRequest.Merge(m, src)
}
func (m *BackupStatusRequest) XXX_Size() int {
	return xxx_messageInfo_BackupStatusRequest.Size(m)
}
func (m *BackupStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BackupStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BackupStatusRequest proto.InternalMessageInfo

func (m *BackupStatusRequest) GetBackup() string {
	if m != nil {
		return m.Backup
	}
	return ""
}

func (m *BackupStatusRequest) GetEngineName() string {
	if m != nil {
		return m.EngineName
	}
	return ""
}

func (m *BackupStatusRequest) GetReplicaAddress() string {
	if m != nil {
		return m.ReplicaAddress
	}
	return ""
}

type BackupStatusResponse struct {
	Progress             int32    `protobuf:"varint,1,opt,name=progress,proto3" json:"progress,omitempty"`
	BackupUrl            string   `protobuf:"bytes,2,opt,name=backup_url,json=backupUrl,proto3" json:"backup_url,omitempty"`
	Error                string   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	SnapshotName         string   `protobuf:"bytes,4,opt,name=snapshot_name,json=snapshotName,proto3" json:"snapshot_name,omitempty"`
	State                string   `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	ReplicaAddress       string   `protobuf:"bytes,6,opt,name=replica_address,json=replicaAddress,proto3" json:"replica_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackupStatusResponse) Reset()         { *m = BackupStatusResponse{} }
func (m *BackupStatusResponse) String() string { return proto.CompactTextString(m) }
func (*BackupStatusResponse) ProtoMessage()    {}
func (*BackupStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{27}
}

func (m *BackupStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackupStatusResponse.Unmarshal(m, b)
}
func (m *BackupStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackupStatusResponse.Marshal(b, m, deterministic)
}
func (m *BackupStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackupStatusResponse.Merge(m, src)
}
func (m *BackupStatusResponse) XXX_Size() int {
	return xxx_messageInfo_BackupStatusResponse.Size(m)
}
func (m *BackupStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BackupStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BackupStatusResponse proto.InternalMessageInfo

func (m *BackupStatusResponse) GetProgress() int32 {
	if m != nil {
		return m.Progress
	}
	return 0
}

func (m *BackupStatusResponse) GetBackupUrl() string {
	if m != nil {
		return m.BackupUrl
	}
	return ""
}

func (m *BackupStatusResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *BackupStatusResponse) GetSnapshotName() string {
	if m != nil {
		return m.SnapshotName
	}
	return ""
}

func (m *BackupStatusResponse) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *BackupStatusResponse) GetReplicaAddress() string {
	if m != nil {
		return m.ReplicaAddress
	}
	return ""
}

type EngineBackupRestoreRequest struct {
	BackupUrl            string            `protobuf:"bytes,1,opt,name=backup_url,json=backupUrl,proto3" json:"backup_url,omitempty"`
	EngineName           string            `protobuf:"bytes,2,opt,name=engine_name,json=engineName,proto3" json:"engine_name,omitempty"`
	SnapshotName         string            `protobuf:"bytes,3,opt,name=snapshot_name,json=snapshotName,proto3" json:"snapshot_name,omitempty"`
	Credential           map[string]string `protobuf:"bytes,4,rep,name=credential,proto3" json:"credential,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ConcurrentLimit      int32             `protobuf:"varint,5,opt,name=concurrent_limit,json=concurrentLimit,proto3" json:"concurrent_limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *EngineBackupRestoreRequest) Reset()         { *m = EngineBackupRestoreRequest{} }
func (m *EngineBackupRestoreRequest) String() string { return proto.CompactTextString(m) }
func (*EngineBackupRestoreRequest) ProtoMessage()    {}
func (*EngineBackupRestoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{28}
}

func (m *EngineBackupRestoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EngineBackupRestoreRequest.Unmarshal(m, b)
}
func (m *EngineBackupRestoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EngineBackupRestoreRequest.Marshal(b, m, deterministic)
}
func (m *EngineBackupRestoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EngineBackupRestoreRequest.Merge(m, src)
}
func (m *EngineBackupRestoreRequest) XXX_Size() int {
	return xxx_messageInfo_EngineBackupRestoreRequest.Size(m)
}
func (m *EngineBackupRestoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EngineBackupRestoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EngineBackupRestoreRequest proto.InternalMessageInfo

func (m *EngineBackupRestoreRequest) GetBackupUrl() string {
	if m != nil {
		return m.BackupUrl
	}
	return ""
}

func (m *EngineBackupRestoreRequest) GetEngineName() string {
	if m != nil {
		return m.EngineName
	}
	return ""
}

func (m *EngineBackupRestoreRequest) GetSnapshotName() string {
	if m != nil {
		return m.SnapshotName
	}
	return ""
}

func (m *EngineBackupRestoreRequest) GetCredential() map[string]string {
	if m != nil {
		return m.Credential
	}
	return nil
}

func (m *EngineBackupRestoreRequest) GetConcurrentLimit() int32 {
	if m != nil {
		return m.ConcurrentLimit
	}
	return 0
}

type EngineBackupRestoreResponse struct {
	Errors               map[string]string `protobuf:"bytes,4,rep,name=errors,proto3" json:"errors,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *EngineBackupRestoreResponse) Reset()         { *m = EngineBackupRestoreResponse{} }
func (m *EngineBackupRestoreResponse) String() string { return proto.CompactTextString(m) }
func (*EngineBackupRestoreResponse) ProtoMessage()    {}
func (*EngineBackupRestoreResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{29}
}

func (m *EngineBackupRestoreResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EngineBackupRestoreResponse.Unmarshal(m, b)
}
func (m *EngineBackupRestoreResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EngineBackupRestoreResponse.Marshal(b, m, deterministic)
}
func (m *EngineBackupRestoreResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EngineBackupRestoreResponse.Merge(m, src)
}
func (m *EngineBackupRestoreResponse) XXX_Size() int {
	return xxx_messageInfo_EngineBackupRestoreResponse.Size(m)
}
func (m *EngineBackupRestoreResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EngineBackupRestoreResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EngineBackupRestoreResponse proto.InternalMessageInfo

func (m *EngineBackupRestoreResponse) GetErrors() map[string]string {
	if m != nil {
		return m.Errors
	}
	return nil
}

type EngineBackupRestoreFinishRequest struct {
	EngineName           string   `protobuf:"bytes,1,opt,name=engine_name,json=engineName,proto3" json:"engine_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EngineBackupRestoreFinishRequest) Reset()         { *m = EngineBackupRestoreFinishRequest{} }
func (m *EngineBackupRestoreFinishRequest) String() string { return proto.CompactTextString(m) }
func (*EngineBackupRestoreFinishRequest) ProtoMessage()    {}
func (*EngineBackupRestoreFinishRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{30}
}

func (m *EngineBackupRestoreFinishRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EngineBackupRestoreFinishRequest.Unmarshal(m, b)
}
func (m *EngineBackupRestoreFinishRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EngineBackupRestoreFinishRequest.Marshal(b, m, deterministic)
}
func (m *EngineBackupRestoreFinishRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EngineBackupRestoreFinishRequest.Merge(m, src)
}
func (m *EngineBackupRestoreFinishRequest) XXX_Size() int {
	return xxx_messageInfo_EngineBackupRestoreFinishRequest.Size(m)
}
func (m *EngineBackupRestoreFinishRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EngineBackupRestoreFinishRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EngineBackupRestoreFinishRequest proto.InternalMessageInfo

func (m *EngineBackupRestoreFinishRequest) GetEngineName() string {
	if m != nil {
		return m.EngineName
	}
	return ""
}

type ReplicaBackupRestoreRequest struct {
	BackupUrl            string            `protobuf:"bytes,1,opt,name=backup_url,json=backupUrl,proto3" json:"backup_url,omitempty"`
	ReplicaName          string            `protobuf:"bytes,2,opt,name=replica_name,json=replicaName,proto3" json:"replica_name,omitempty"`
	SnapshotName         string            `protobuf:"bytes,3,opt,name=snapshot_name,json=snapshotName,proto3" json:"snapshot_name,omitempty"`
	Credential           map[string]string `protobuf:"bytes,4,rep,name=credential,proto3" json:"credential,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ConcurrentLimit      int32             `protobuf:"varint,5,opt,name=concurrent_limit,json=concurrentLimit,proto3" json:"concurrent_limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ReplicaBackupRestoreRequest) Reset()         { *m = ReplicaBackupRestoreRequest{} }
func (m *ReplicaBackupRestoreRequest) String() string { return proto.CompactTextString(m) }
func (*ReplicaBackupRestoreRequest) ProtoMessage()    {}
func (*ReplicaBackupRestoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{31}
}

func (m *ReplicaBackupRestoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaBackupRestoreRequest.Unmarshal(m, b)
}
func (m *ReplicaBackupRestoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaBackupRestoreRequest.Marshal(b, m, deterministic)
}
func (m *ReplicaBackupRestoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaBackupRestoreRequest.Merge(m, src)
}
func (m *ReplicaBackupRestoreRequest) XXX_Size() int {
	return xxx_messageInfo_ReplicaBackupRestoreRequest.Size(m)
}
func (m *ReplicaBackupRestoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaBackupRestoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaBackupRestoreRequest proto.InternalMessageInfo

func (m *ReplicaBackupRestoreRequest) GetBackupUrl() string {
	if m != nil {
		return m.BackupUrl
	}
	return ""
}

func (m *ReplicaBackupRestoreRequest) GetReplicaName() string {
	if m != nil {
		return m.ReplicaName
	}
	return ""
}

func (m *ReplicaBackupRestoreRequest) GetSnapshotName() string {
	if m != nil {
		return m.SnapshotName
	}
	return ""
}

func (m *ReplicaBackupRestoreRequest) GetCredential() map[string]string {
	if m != nil {
		return m.Credential
	}
	return nil
}

func (m *ReplicaBackupRestoreRequest) GetConcurrentLimit() int32 {
	if m != nil {
		return m.ConcurrentLimit
	}
	return 0
}

type RestoreStatusRequest struct {
	EngineName           string   `protobuf:"bytes,1,opt,name=engine_name,json=engineName,proto3" json:"engine_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestoreStatusRequest) Reset()         { *m = RestoreStatusRequest{} }
func (m *RestoreStatusRequest) String() string { return proto.CompactTextString(m) }
func (*RestoreStatusRequest) ProtoMessage()    {}
func (*RestoreStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{32}
}

func (m *RestoreStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestoreStatusRequest.Unmarshal(m, b)
}
func (m *RestoreStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestoreStatusRequest.Marshal(b, m, deterministic)
}
func (m *RestoreStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestoreStatusRequest.Merge(m, src)
}
func (m *RestoreStatusRequest) XXX_Size() int {
	return xxx_messageInfo_RestoreStatusRequest.Size(m)
}
func (m *RestoreStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RestoreStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RestoreStatusRequest proto.InternalMessageInfo

func (m *RestoreStatusRequest) GetEngineName() string {
	if m != nil {
		return m.EngineName
	}
	return ""
}

type ReplicaRestoreStatusRequest struct {
	ReplicaName          string   `protobuf:"bytes,2,opt,name=replica_name,json=replicaName,proto3" json:"replica_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaRestoreStatusRequest) Reset()         { *m = ReplicaRestoreStatusRequest{} }
func (m *ReplicaRestoreStatusRequest) String() string { return proto.CompactTextString(m) }
func (*ReplicaRestoreStatusRequest) ProtoMessage()    {}
func (*ReplicaRestoreStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{33}
}

func (m *ReplicaRestoreStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaRestoreStatusRequest.Unmarshal(m, b)
}
func (m *ReplicaRestoreStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaRestoreStatusRequest.Marshal(b, m, deterministic)
}
func (m *ReplicaRestoreStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaRestoreStatusRequest.Merge(m, src)
}
func (m *ReplicaRestoreStatusRequest) XXX_Size() int {
	return xxx_messageInfo_ReplicaRestoreStatusRequest.Size(m)
}
func (m *ReplicaRestoreStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaRestoreStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaRestoreStatusRequest proto.InternalMessageInfo

func (m *ReplicaRestoreStatusRequest) GetReplicaName() string {
	if m != nil {
		return m.ReplicaName
	}
	return ""
}

type ReplicaRestoreStatusResponse struct {
	ReplicaName            string   `protobuf:"bytes,1,opt,name=replica_name,json=replicaName,proto3" json:"replica_name,omitempty"`
	ReplicaAddress         string   `protobuf:"bytes,2,opt,name=replica_address,json=replicaAddress,proto3" json:"replica_address,omitempty"`
	IsRestoring            bool     `protobuf:"varint,3,opt,name=is_restoring,json=isRestoring,proto3" json:"is_restoring,omitempty"`
	LastRestored           string   `protobuf:"bytes,4,opt,name=last_restored,json=lastRestored,proto3" json:"last_restored,omitempty"`
	Progress               int32    `protobuf:"varint,5,opt,name=progress,proto3" json:"progress,omitempty"`
	Error                  string   `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
	DestFileName           string   `protobuf:"bytes,7,opt,name=dest_file_name,json=destFileName,proto3" json:"dest_file_name,omitempty"`
	State                  string   `protobuf:"bytes,8,opt,name=state,proto3" json:"state,omitempty"`
	BackupUrl              string   `protobuf:"bytes,9,opt,name=backup_url,json=backupUrl,proto3" json:"backup_url,omitempty"`
	CurrentRestoringBackup string   `protobuf:"bytes,10,opt,name=current_restoring_backup,json=currentRestoringBackup,proto3" json:"current_restoring_backup,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *ReplicaRestoreStatusResponse) Reset()         { *m = ReplicaRestoreStatusResponse{} }
func (m *ReplicaRestoreStatusResponse) String() string { return proto.CompactTextString(m) }
func (*ReplicaRestoreStatusResponse) ProtoMessage()    {}
func (*ReplicaRestoreStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{34}
}

func (m *ReplicaRestoreStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaRestoreStatusResponse.Unmarshal(m, b)
}
func (m *ReplicaRestoreStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaRestoreStatusResponse.Marshal(b, m, deterministic)
}
func (m *ReplicaRestoreStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaRestoreStatusResponse.Merge(m, src)
}
func (m *ReplicaRestoreStatusResponse) XXX_Size() int {
	return xxx_messageInfo_ReplicaRestoreStatusResponse.Size(m)
}
func (m *ReplicaRestoreStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaRestoreStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaRestoreStatusResponse proto.InternalMessageInfo

func (m *ReplicaRestoreStatusResponse) GetReplicaName() string {
	if m != nil {
		return m.ReplicaName
	}
	return ""
}

func (m *ReplicaRestoreStatusResponse) GetReplicaAddress() string {
	if m != nil {
		return m.ReplicaAddress
	}
	return ""
}

func (m *ReplicaRestoreStatusResponse) GetIsRestoring() bool {
	if m != nil {
		return m.IsRestoring
	}
	return false
}

func (m *ReplicaRestoreStatusResponse) GetLastRestored() string {
	if m != nil {
		return m.LastRestored
	}
	return ""
}

func (m *ReplicaRestoreStatusResponse) GetProgress() int32 {
	if m != nil {
		return m.Progress
	}
	return 0
}

func (m *ReplicaRestoreStatusResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ReplicaRestoreStatusResponse) GetDestFileName() string {
	if m != nil {
		return m.DestFileName
	}
	return ""
}

func (m *ReplicaRestoreStatusResponse) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *ReplicaRestoreStatusResponse) GetBackupUrl() string {
	if m != nil {
		return m.BackupUrl
	}
	return ""
}

func (m *ReplicaRestoreStatusResponse) GetCurrentRestoringBackup() string {
	if m != nil {
		return m.CurrentRestoringBackup
	}
	return ""
}

type RestoreStatusResponse struct {
	Status               map[string]*ReplicaRestoreStatusResponse `protobuf:"bytes,1,rep,name=status,proto3" json:"status,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *RestoreStatusResponse) Reset()         { *m = RestoreStatusResponse{} }
func (m *RestoreStatusResponse) String() string { return proto.CompactTextString(m) }
func (*RestoreStatusResponse) ProtoMessage()    {}
func (*RestoreStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{35}
}

func (m *RestoreStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestoreStatusResponse.Unmarshal(m, b)
}
func (m *RestoreStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestoreStatusResponse.Marshal(b, m, deterministic)
}
func (m *RestoreStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestoreStatusResponse.Merge(m, src)
}
func (m *RestoreStatusResponse) XXX_Size() int {
	return xxx_messageInfo_RestoreStatusResponse.Size(m)
}
func (m *RestoreStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RestoreStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RestoreStatusResponse proto.InternalMessageInfo

func (m *RestoreStatusResponse) GetStatus() map[string]*ReplicaRestoreStatusResponse {
	if m != nil {
		return m.Status
	}
	return nil
}

type Disk struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid                 string   `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Path                 string   `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Type                 string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	TotalSize            int64    `protobuf:"varint,5,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	FreeSize             int64    `protobuf:"varint,6,opt,name=free_size,json=freeSize,proto3" json:"free_size,omitempty"`
	TotalBlocks          int64    `protobuf:"varint,7,opt,name=total_blocks,json=totalBlocks,proto3" json:"total_blocks,omitempty"`
	FreeBlocks           int64    `protobuf:"varint,8,opt,name=free_blocks,json=freeBlocks,proto3" json:"free_blocks,omitempty"`
	BlockSize            int64    `protobuf:"varint,9,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`
	ClusterSize          int64    `protobuf:"varint,10,opt,name=cluster_size,json=clusterSize,proto3" json:"cluster_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Disk) Reset()         { *m = Disk{} }
func (m *Disk) String() string { return proto.CompactTextString(m) }
func (*Disk) ProtoMessage()    {}
func (*Disk) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{36}
}

func (m *Disk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Disk.Unmarshal(m, b)
}
func (m *Disk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Disk.Marshal(b, m, deterministic)
}
func (m *Disk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Disk.Merge(m, src)
}
func (m *Disk) XXX_Size() int {
	return xxx_messageInfo_Disk.Size(m)
}
func (m *Disk) XXX_DiscardUnknown() {
	xxx_messageInfo_Disk.DiscardUnknown(m)
}

var xxx_messageInfo_Disk proto.InternalMessageInfo

func (m *Disk) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Disk) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Disk) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Disk) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Disk) GetTotalSize() int64 {
	if m != nil {
		return m.TotalSize
	}
	return 0
}

func (m *Disk) GetFreeSize() int64 {
	if m != nil {
		return m.FreeSize
	}
	return 0
}

func (m *Disk) GetTotalBlocks() int64 {
	if m != nil {
		return m.TotalBlocks
	}
	return 0
}

func (m *Disk) GetFreeBlocks() int64 {
	if m != nil {
		return m.FreeBlocks
	}
	return 0
}

func (m *Disk) GetBlockSize() int64 {
	if m != nil {
		return m.BlockSize
	}
	return 0
}

func (m *Disk) GetClusterSize() int64 {
	if m != nil {
		return m.ClusterSize
	}
	return 0
}

type DiskCreateRequest struct {
	DiskName             string   `protobuf:"bytes,1,opt,name=disk_name,json=diskName,proto3" json:"disk_name,omitempty"`
	DiskUuid             string   `protobuf:"bytes,2,opt,name=disk_uuid,json=diskUuid,proto3" json:"disk_uuid,omitempty"`
	DiskPath             string   `protobuf:"bytes,3,opt,name=disk_path,json=diskPath,proto3" json:"disk_path,omitempty"`
	BlockSize            int64    `protobuf:"varint,4,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiskCreateRequest) Reset()         { *m = DiskCreateRequest{} }
func (m *DiskCreateRequest) String() string { return proto.CompactTextString(m) }
func (*DiskCreateRequest) ProtoMessage()    {}
func (*DiskCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{37}
}

func (m *DiskCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiskCreateRequest.Unmarshal(m, b)
}
func (m *DiskCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiskCreateRequest.Marshal(b, m, deterministic)
}
func (m *DiskCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiskCreateRequest.Merge(m, src)
}
func (m *DiskCreateRequest) XXX_Size() int {
	return xxx_messageInfo_DiskCreateRequest.Size(m)
}
func (m *DiskCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DiskCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DiskCreateRequest proto.InternalMessageInfo

func (m *DiskCreateRequest) GetDiskName() string {
	if m != nil {
		return m.DiskName
	}
	return ""
}

func (m *DiskCreateRequest) GetDiskUuid() string {
	if m != nil {
		return m.DiskUuid
	}
	return ""
}

func (m *DiskCreateRequest) GetDiskPath() string {
	if m != nil {
		return m.DiskPath
	}
	return ""
}

func (m *DiskCreateRequest) GetBlockSize() int64 {
	if m != nil {
		return m.BlockSize
	}
	return 0
}

type DiskGetRequest struct {
	DiskName             string   `protobuf:"bytes,1,opt,name=disk_name,json=diskName,proto3" json:"disk_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiskGetRequest) Reset()         { *m = DiskGetRequest{} }
func (m *DiskGetRequest) String() string { return proto.CompactTextString(m) }
func (*DiskGetRequest) ProtoMessage()    {}
func (*DiskGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{38}
}

func (m *DiskGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiskGetRequest.Unmarshal(m, b)
}
func (m *DiskGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiskGetRequest.Marshal(b, m, deterministic)
}
func (m *DiskGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiskGetRequest.Merge(m, src)
}
func (m *DiskGetRequest) XXX_Size() int {
	return xxx_messageInfo_DiskGetRequest.Size(m)
}
func (m *DiskGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DiskGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DiskGetRequest proto.InternalMessageInfo

func (m *DiskGetRequest) GetDiskName() string {
	if m != nil {
		return m.DiskName
	}
	return ""
}

type DiskDeleteRequest struct {
	DiskName             string   `protobuf:"bytes,1,opt,name=disk_name,json=diskName,proto3" json:"disk_name,omitempty"`
	DiskUuid             string   `protobuf:"bytes,2,opt,name=disk_uuid,json=diskUuid,proto3" json:"disk_uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiskDeleteRequest) Reset()         { *m = DiskDeleteRequest{} }
func (m *DiskDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DiskDeleteRequest) ProtoMessage()    {}
func (*DiskDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{39}
}

func (m *DiskDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiskDeleteRequest.Unmarshal(m, b)
}
func (m *DiskDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiskDeleteRequest.Marshal(b, m, deterministic)
}
func (m *DiskDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiskDeleteRequest.Merge(m, src)
}
func (m *DiskDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DiskDeleteRequest.Size(m)
}
func (m *DiskDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DiskDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DiskDeleteRequest proto.InternalMessageInfo

func (m *DiskDeleteRequest) GetDiskName() string {
	if m != nil {
		return m.DiskName
	}
	return ""
}

func (m *DiskDeleteRequest) GetDiskUuid() string {
	if m != nil {
		return m.DiskUuid
	}
	return ""
}

func init() {
	proto.RegisterEnum("spdkrpc.ReplicaMode", ReplicaMode_name, ReplicaMode_value)
	proto.RegisterType((*Lvol)(nil), "spdkrpc.Lvol")
	proto.RegisterMapType((map[string]bool)(nil), "spdkrpc.Lvol.ChildrenEntry")
	proto.RegisterType((*Replica)(nil), "spdkrpc.Replica")
	proto.RegisterMapType((map[string]*Lvol)(nil), "spdkrpc.Replica.SnapshotsEntry")
	proto.RegisterType((*ReplicaCreateRequest)(nil), "spdkrpc.ReplicaCreateRequest")
	proto.RegisterType((*ReplicaDeleteRequest)(nil), "spdkrpc.ReplicaDeleteRequest")
	proto.RegisterType((*ReplicaGetRequest)(nil), "spdkrpc.ReplicaGetRequest")
	proto.RegisterType((*ReplicaListResponse)(nil), "spdkrpc.ReplicaListResponse")
	proto.RegisterMapType((map[string]*Replica)(nil), "spdkrpc.ReplicaListResponse.ReplicasEntry")
	proto.RegisterType((*ReplicaRebuildingSrcStartRequest)(nil), "spdkrpc.ReplicaRebuildingSrcStartRequest")
	proto.RegisterType((*ReplicaRebuildingSrcFinishRequest)(nil), "spdkrpc.ReplicaRebuildingSrcFinishRequest")
	proto.RegisterType((*ReplicaSnapshotShallowCopyRequest)(nil), "spdkrpc.ReplicaSnapshotShallowCopyRequest")
	proto.RegisterType((*ReplicaRebuildingDstStartRequest)(nil), "spdkrpc.ReplicaRebuildingDstStartRequest")
	proto.RegisterType((*ReplicaRebuildingDstStartResponse)(nil), "spdkrpc.ReplicaRebuildingDstStartResponse")
	proto.RegisterType((*ReplicaRebuildingDstFinishRequest)(nil), "spdkrpc.ReplicaRebuildingDstFinishRequest")
	proto.RegisterType((*Engine)(nil), "spdkrpc.Engine")
	proto.RegisterMapType((map[string]string)(nil), "spdkrpc.Engine.ReplicaAddressMapEntry")
	proto.RegisterMapType((map[string]ReplicaMode)(nil), "spdkrpc.Engine.ReplicaModeMapEntry")
	proto.RegisterType((*EngineCreateRequest)(nil), "spdkrpc.EngineCreateRequest")
	proto.RegisterMapType((map[string]string)(nil), "spdkrpc.EngineCreateRequest.ReplicaAddressMapEntry")
	proto.RegisterType((*EngineDeleteRequest)(nil), "spdkrpc.EngineDeleteRequest")
	proto.RegisterType((*EngineGetRequest)(nil), "spdkrpc.EngineGetRequest")
	proto.RegisterType((*EngineListResponse)(nil), "spdkrpc.EngineListResponse")
	proto.RegisterMapType((map[string]*Engine)(nil), "spdkrpc.EngineListResponse.EnginesEntry")
	proto.RegisterType((*EngineReplicaAddRequest)(nil), "spdkrpc.EngineReplicaAddRequest")
	proto.RegisterType((*EngineReplicaListRequest)(nil), "spdkrpc.EngineReplicaListRequest")
	proto.RegisterType((*EngineReplicaListResponse)(nil), "spdkrpc.EngineReplicaListResponse")
	proto.RegisterMapType((map[string]*Replica)(nil), "spdkrpc.EngineReplicaListResponse.ReplicasEntry")
	proto.RegisterType((*EngineReplicaDeleteRequest)(nil), "spdkrpc.EngineReplicaDeleteRequest")
	proto.RegisterType((*SnapshotRequest)(nil), "spdkrpc.SnapshotRequest")
	proto.RegisterType((*VersionOutput)(nil), "spdkrpc.VersionOutput")
	proto.RegisterType((*VersionDetailGetReply)(nil), "spdkrpc.VersionDetailGetReply")
	proto.RegisterType((*BackupCreateRequest)(nil), "spdkrpc.BackupCreateRequest")
	proto.RegisterMapType((map[string]string)(nil), "spdkrpc.BackupCreateRequest.CredentialEntry")
	proto.RegisterType((*BackupCreateResponse)(nil), "spdkrpc.BackupCreateResponse")
	proto.RegisterType((*BackupStatusRequest)(nil), "spdkrpc.BackupStatusRequest")
	proto.RegisterType((*BackupStatusResponse)(nil), "spdkrpc.BackupStatusResponse")
	proto.RegisterType((*EngineBackupRestoreRequest)(nil), "spdkrpc.EngineBackupRestoreRequest")
	proto.RegisterMapType((map[string]string)(nil), "spdkrpc.EngineBackupRestoreRequest.CredentialEntry")
	proto.RegisterType((*EngineBackupRestoreResponse)(nil), "spdkrpc.EngineBackupRestoreResponse")
	proto.RegisterMapType((map[string]string)(nil), "spdkrpc.EngineBackupRestoreResponse.ErrorsEntry")
	proto.RegisterType((*EngineBackupRestoreFinishRequest)(nil), "spdkrpc.EngineBackupRestoreFinishRequest")
	proto.RegisterType((*ReplicaBackupRestoreRequest)(nil), "spdkrpc.ReplicaBackupRestoreRequest")
	proto.RegisterMapType((map[string]string)(nil), "spdkrpc.ReplicaBackupRestoreRequest.CredentialEntry")
	proto.RegisterType((*RestoreStatusRequest)(nil), "spdkrpc.RestoreStatusRequest")
	proto.RegisterType((*ReplicaRestoreStatusRequest)(nil), "spdkrpc.ReplicaRestoreStatusRequest")
	proto.RegisterType((*ReplicaRestoreStatusResponse)(nil), "spdkrpc.ReplicaRestoreStatusResponse")
	proto.RegisterType((*RestoreStatusResponse)(nil), "spdkrpc.RestoreStatusResponse")
	proto.RegisterMapType((map[string]*ReplicaRestoreStatusResponse)(nil), "spdkrpc.RestoreStatusResponse.StatusEntry")
	proto.RegisterType((*Disk)(nil), "spdkrpc.Disk")
	proto.RegisterType((*DiskCreateRequest)(nil), "spdkrpc.DiskCreateRequest")
	proto.RegisterType((*DiskGetRequest)(nil), "spdkrpc.DiskGetRequest")
	proto.RegisterType((*DiskDeleteRequest)(nil), "spdkrpc.DiskDeleteRequest")
}

func init() { proto.RegisterFile("spdk.proto", fileDescriptor_f86dfec2b2acc42c) }

var fileDescriptor_f86dfec2b2acc42c = []byte{
	// 2609 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x59, 0xcb, 0x6f, 0xdb, 0xc8,
	0x19, 0xb7, 0x9e, 0x96, 0x3e, 0xf9, 0x21, 0x4f, 0xbc, 0x8e, 0x42, 0xe7, 0xe1, 0xd0, 0x79, 0x38,
	0x6e, 0xd6, 0x9b, 0x7a, 0x17, 0x48, 0xba, 0x41, 0x80, 0x24, 0x72, 0xd2, 0xcd, 0xc6, 0xde, 0x0d,
	0xe4, 0x3c, 0x2e, 0x0b, 0x28, 0x34, 0x39, 0xb1, 0x09, 0x53, 0x24, 0x97, 0x1c, 0x79, 0xeb, 0x3d,
	0xf4, 0xd8, 0xa2, 0x3d, 0xf7, 0xbe, 0x40, 0x81, 0xde, 0x7a, 0x29, 0x7a, 0xe9, 0xa5, 0x40, 0x0f,
	0x2d, 0x50, 0xa0, 0xe8, 0x1f, 0xd4, 0x5b, 0x31, 0x2f, 0x8a, 0x43, 0x8e, 0x28, 0xe5, 0x81, 0x76,
	0x4f, 0x12, 0x7f, 0xdf, 0xcc, 0x37, 0xdf, 0x6b, 0xbe, 0xef, 0x9b, 0x19, 0x80, 0x38, 0x74, 0x8e,
	0xb7, 0xc2, 0x28, 0x20, 0x01, 0x9a, 0xa5, 0xff, 0xa3, 0xd0, 0x36, 0x56, 0x0f, 0x83, 0xe0, 0xd0,
	0xc3, 0x9f, 0x30, 0xf8, 0x60, 0xf8, 0xe6, 0x13, 0x3c, 0x08, 0xc9, 0x29, 0x1f, 0x65, 0xfe, 0x50,
	0x86, 0xea, 0xee, 0x49, 0xe0, 0x21, 0x04, 0x55, 0xdf, 0x1a, 0xe0, 0x4e, 0x69, 0xad, 0xb4, 0xd1,
	0xec, 0xb1, 0xff, 0x14, 0x1b, 0x0e, 0x5d, 0xa7, 0x53, 0xe6, 0x18, 0xfd, 0x8f, 0x56, 0xa1, 0x19,
	0x87, 0xd8, 0xee, 0xc7, 0xee, 0xf7, 0xb8, 0x53, 0x59, 0x2b, 0x6d, 0x54, 0x7b, 0x0d, 0x0a, 0xec,
	0xbb, 0xdf, 0x63, 0x74, 0x09, 0x5a, 0x96, 0x4d, 0x86, 0x96, 0xc7, 0xc9, 0x55, 0x46, 0x06, 0x0e,
	0xb1, 0x01, 0x2b, 0x50, 0x0f, 0xad, 0x08, 0xfb, 0xa4, 0x53, 0x63, 0x3c, 0xc5, 0x17, 0xba, 0x0d,
	0x0d, 0xfb, 0xc8, 0xf5, 0x9c, 0x08, 0xfb, 0x9d, 0xfa, 0x5a, 0x65, 0xa3, 0xb5, 0xbd, 0xba, 0x25,
	0xe4, 0xdf, 0xa2, 0xe2, 0x6d, 0x75, 0x05, 0xf5, 0x91, 0x4f, 0xa2, 0xd3, 0x5e, 0x32, 0x18, 0xad,
	0xc3, 0xbc, 0x1d, 0x61, 0x8b, 0xb8, 0x81, 0xdf, 0x27, 0xee, 0x00, 0x77, 0x66, 0x19, 0xdf, 0x39,
	0x09, 0x3e, 0x77, 0x07, 0xd8, 0xb8, 0x0b, 0xf3, 0xca, 0x7c, 0xd4, 0x86, 0xca, 0x31, 0x3e, 0x15,
	0xba, 0xd2, 0xbf, 0x68, 0x19, 0x6a, 0x27, 0x96, 0x37, 0xc4, 0x4c, 0xd7, 0x46, 0x8f, 0x7f, 0x7c,
	0x5e, 0xbe, 0x53, 0x32, 0xff, 0x54, 0x81, 0xd9, 0x1e, 0x0e, 0x3d, 0xd7, 0xb6, 0xa6, 0x36, 0xd2,
	0x39, 0x68, 0x78, 0x27, 0x71, 0x9f, 0x8d, 0xad, 0x30, 0x7c, 0xd6, 0x3b, 0x89, 0xbf, 0xa2, 0xc3,
	0x05, 0x89, 0x4d, 0xa9, 0x26, 0xa4, 0x17, 0x39, 0xd3, 0xd6, 0x8a, 0x4d, 0x5b, 0xcf, 0x99, 0x76,
	0x01, 0xca, 0x6e, 0x28, 0xd4, 0x2f, 0xbb, 0x21, 0xba, 0x00, 0x10, 0x06, 0x11, 0xe9, 0xc7, 0xc4,
	0x8a, 0x48, 0xa7, 0xb1, 0x56, 0xda, 0xa8, 0xf5, 0x9a, 0x14, 0xd9, 0xa7, 0x00, 0x95, 0x83, 0x91,
	0xb1, 0xef, 0x74, 0x9a, 0x8c, 0x38, 0x4b, 0xbf, 0x1f, 0xf9, 0x0e, 0xba, 0x07, 0xcd, 0xd8, 0xb7,
	0xc2, 0xf8, 0x28, 0x20, 0x71, 0x07, 0x98, 0x37, 0x2e, 0x25, 0xde, 0x10, 0xa6, 0xd8, 0xda, 0x97,
	0x23, 0xb8, 0x47, 0x46, 0x33, 0xd0, 0x45, 0x80, 0x08, 0x1f, 0x0c, 0x5d, 0xcf, 0x71, 0xfd, 0xc3,
	0x4e, 0x8b, 0xd9, 0x33, 0x85, 0x50, 0x53, 0xc7, 0xc4, 0x22, 0xb8, 0x33, 0xc7, 0x64, 0xe5, 0x1f,
	0xc6, 0x53, 0x58, 0x50, 0x59, 0x6a, 0x9c, 0xb4, 0x9e, 0x76, 0x52, 0x6b, 0x7b, 0x5e, 0x09, 0x91,
	0xb4, 0xcf, 0xfe, 0x51, 0x82, 0x65, 0x21, 0x68, 0x97, 0x06, 0x02, 0xee, 0xe1, 0x6f, 0x87, 0x38,
	0x26, 0x5a, 0x07, 0xa6, 0x9d, 0x55, 0x1e, 0xef, 0xac, 0x4a, 0x81, 0xb3, 0xaa, 0x19, 0x67, 0x5d,
	0x87, 0x45, 0xfc, 0x8b, 0x30, 0x88, 0x71, 0x3f, 0xc2, 0xdf, 0x0e, 0xdd, 0x08, 0x3b, 0xcc, 0x9f,
	0x8d, 0xde, 0x02, 0x87, 0x7b, 0x02, 0x4d, 0x9c, 0x64, 0x07, 0x43, 0x9f, 0x30, 0xa7, 0x0a, 0x27,
	0x75, 0x29, 0x60, 0xbe, 0x48, 0xd4, 0xd8, 0xc1, 0x1e, 0x2e, 0x56, 0xe3, 0x06, 0xb4, 0x6d, 0x0f,
	0x5b, 0xfe, 0x30, 0x1c, 0x2d, 0xca, 0x83, 0x79, 0x51, 0xe0, 0x72, 0x55, 0xf3, 0x3a, 0x2c, 0x09,
	0xb6, 0x3f, 0xc7, 0xa4, 0x80, 0xa7, 0xf9, 0xc7, 0x12, 0x9c, 0x11, 0x23, 0x77, 0xdd, 0x98, 0xf4,
	0x70, 0x1c, 0x06, 0x7e, 0x8c, 0xd1, 0x63, 0x68, 0x44, 0x1c, 0x8e, 0x3b, 0x25, 0x16, 0x20, 0x9b,
	0xd9, 0x00, 0x49, 0x8f, 0x97, 0x98, 0x88, 0x95, 0x64, 0xae, 0xb1, 0x07, 0xf3, 0x0a, 0x49, 0xe3,
	0xf3, 0x6b, 0xaa, 0xcf, 0xdb, 0xd9, 0x75, 0xd2, 0x6e, 0xff, 0xa1, 0x04, 0x6b, 0x12, 0x4e, 0xe2,
	0x6d, 0x3f, 0xb2, 0x59, 0xc4, 0x17, 0xd9, 0x6e, 0x03, 0xda, 0x4e, 0x4c, 0xfa, 0x42, 0xae, 0x74,
	0x28, 0x2c, 0x38, 0x54, 0x0d, 0x06, 0xb3, 0x88, 0xb8, 0x07, 0xab, 0x7c, 0xa4, 0x64, 0xdf, 0xf7,
	0x4e, 0x02, 0xaf, 0x6f, 0x39, 0x4e, 0x84, 0xe3, 0x58, 0x04, 0x49, 0x87, 0x4d, 0x92, 0x23, 0x68,
	0x70, 0x3e, 0xe0, 0x74, 0xd3, 0x82, 0xcb, 0x3a, 0x01, 0x1f, 0xbb, 0xbe, 0x1b, 0x1f, 0x7d, 0x10,
	0x09, 0xcd, 0x6f, 0x92, 0x25, 0xe4, 0x7e, 0xda, 0x3f, 0xb2, 0x3c, 0x2f, 0xf8, 0xae, 0x1b, 0x84,
	0xa7, 0x45, 0x4b, 0xac, 0xc3, 0xbc, 0xdc, 0xc4, 0x69, 0xfe, 0x73, 0x12, 0x64, 0xdc, 0xfb, 0x1a,
	0x0b, 0xef, 0xc4, 0x64, 0xa2, 0x85, 0x35, 0x3b, 0xa2, 0xac, 0xdb, 0x11, 0xe6, 0x3d, 0x8d, 0x85,
	0x46, 0x0b, 0x88, 0xf8, 0xeb, 0xc0, 0xac, 0xb4, 0x38, 0x5f, 0x44, 0x7e, 0x9a, 0x8e, 0x7e, 0xfa,
	0x64, 0x03, 0xff, 0x04, 0x96, 0x86, 0xbe, 0x5e, 0xc4, 0xb6, 0x24, 0x24, 0x42, 0xfe, 0xb9, 0x0a,
	0xf5, 0x47, 0xfe, 0xa1, 0xeb, 0x63, 0x2d, 0xaf, 0x4b, 0xd0, 0x3a, 0x09, 0xbc, 0xe1, 0x00, 0xa7,
	0xed, 0x08, 0x1c, 0x62, 0x51, 0xf4, 0x7e, 0x45, 0x94, 0x67, 0xfa, 0x5a, 0x92, 0xe9, 0x11, 0x54,
	0x69, 0xca, 0x10, 0xe9, 0x83, 0xfd, 0x47, 0x2f, 0xe1, 0x8c, 0x8c, 0x15, 0x61, 0x9a, 0xfe, 0xc0,
	0xa2, 0xe5, 0x81, 0x6e, 0xd6, 0x6b, 0xc9, 0x26, 0xe2, 0x4a, 0xc8, 0xbd, 0x24, 0xa2, 0x74, 0xcf,
	0x0a, 0xf9, 0x46, 0x5d, 0x8a, 0xb2, 0x38, 0xda, 0x83, 0xb6, 0xe4, 0x3b, 0x08, 0x1c, 0xcc, 0x98,
	0x36, 0x18, 0xd3, 0xf5, 0x31, 0x4c, 0xf7, 0x02, 0x07, 0x27, 0x1c, 0x17, 0x22, 0x05, 0x44, 0x06,
	0x34, 0xde, 0x44, 0x81, 0x4f, 0x64, 0x15, 0x6a, 0xf6, 0x92, 0x6f, 0x4a, 0xc3, 0xbe, 0x13, 0x06,
	0xae, 0x4f, 0x3a, 0xc0, 0x69, 0xf2, 0x7b, 0x54, 0x43, 0x5a, 0xe9, 0x1a, 0xb2, 0x03, 0x2b, 0x7a,
	0x4d, 0x26, 0x15, 0xfc, 0x66, 0x2a, 0x8b, 0x18, 0xaf, 0x92, 0x9c, 0x97, 0x16, 0x5d, 0xc3, 0x62,
	0x33, 0xcd, 0x62, 0x61, 0x7b, 0x39, 0x9b, 0x9a, 0xe8, 0xf4, 0x74, 0x7a, 0xfa, 0x77, 0x19, 0xce,
	0x70, 0xdb, 0x4c, 0x2e, 0x4a, 0xef, 0x17, 0x42, 0xb6, 0xde, 0xfb, 0x55, 0xe6, 0xa8, 0x4f, 0x33,
	0x8e, 0x52, 0x84, 0x79, 0x8b, 0x50, 0x48, 0xfb, 0xae, 0x96, 0xf1, 0x5d, 0x71, 0x5d, 0xfb, 0x30,
	0x8e, 0x32, 0x6f, 0x48, 0x73, 0x4e, 0x2c, 0x8e, 0xe6, 0x35, 0x68, 0xf3, 0xa1, 0x13, 0x0a, 0xde,
	0x1f, 0x4a, 0x80, 0xf8, 0x40, 0xa5, 0xde, 0x3d, 0x84, 0x59, 0xcc, 0x50, 0x59, 0xee, 0x36, 0x32,
	0x36, 0x54, 0xaa, 0x1d, 0x87, 0x44, 0xb1, 0x93, 0x13, 0x8d, 0xa7, 0x30, 0x97, 0x26, 0x68, 0x34,
	0xbd, 0xaa, 0x96, 0xba, 0xc5, 0xcc, 0x1a, 0x69, 0xd5, 0x7f, 0x55, 0x82, 0xb3, 0x02, 0x4d, 0xec,
	0x28, 0xf5, 0xba, 0x04, 0x2d, 0xbe, 0x66, 0x3f, 0xa5, 0x1e, 0x70, 0x88, 0x85, 0xce, 0x65, 0x98,
	0xd3, 0xd4, 0x91, 0x56, 0x94, 0x2a, 0x73, 0xd7, 0x61, 0x31, 0x13, 0x40, 0xa2, 0xb4, 0x2d, 0xa8,
	0x71, 0x60, 0xde, 0x85, 0x8e, 0x22, 0x07, 0x37, 0xc4, 0x74, 0x82, 0x98, 0x7f, 0x29, 0xc1, 0x39,
	0xcd, 0x6c, 0x61, 0xf4, 0xdd, 0x5c, 0x93, 0x71, 0x2b, 0x6b, 0x91, 0xff, 0x5f, 0xab, 0xf1, 0x9b,
	0x12, 0x18, 0x8a, 0x10, 0x6a, 0x0c, 0xfe, 0x4f, 0x7d, 0xf0, 0x25, 0x2c, 0xca, 0x52, 0xff, 0xde,
	0xf5, 0xfd, 0xd7, 0x15, 0x98, 0x7f, 0x89, 0xa3, 0xd8, 0x0d, 0xfc, 0xaf, 0x87, 0x24, 0x1c, 0x12,
	0x5a, 0x6b, 0x4f, 0x38, 0x20, 0x6b, 0xad, 0xf8, 0x44, 0xe7, 0xa1, 0x79, 0xe8, 0x92, 0x6e, 0x30,
	0x18, 0xb8, 0x44, 0x30, 0x1b, 0x01, 0x94, 0xca, 0x0a, 0xf0, 0x0e, 0x4d, 0xd3, 0x5c, 0xf0, 0x11,
	0x80, 0xae, 0xc0, 0xbc, 0xed, 0xb9, 0x0f, 0x9e, 0x3d, 0x11, 0x8b, 0xb1, 0x32, 0x57, 0xe9, 0xa9,
	0x20, 0xda, 0xa4, 0x3d, 0x2d, 0x05, 0xf6, 0x5c, 0x5f, 0x0e, 0xac, 0xb1, 0x81, 0x39, 0x1c, 0x6d,
	0xc3, 0xb2, 0x1d, 0xf8, 0x24, 0x0a, 0x3c, 0x0f, 0x47, 0x29, 0xc6, 0x75, 0x36, 0x5e, 0x4b, 0x43,
	0x77, 0xe0, 0xac, 0x82, 0xa7, 0x96, 0x99, 0x65, 0xd3, 0xc6, 0x91, 0xd1, 0x4d, 0x58, 0x72, 0x2c,
	0x62, 0x3d, 0x0e, 0xa2, 0x81, 0x45, 0xe4, 0x9c, 0x06, 0x9b, 0x93, 0x27, 0x50, 0xd9, 0x46, 0x60,
	0x6a, 0x91, 0x26, 0x97, 0x4d, 0x47, 0x33, 0x9f, 0xc0, 0x47, 0xe2, 0xef, 0x0e, 0x26, 0x96, 0xeb,
	0xb1, 0xcc, 0x15, 0x7a, 0xa7, 0xe8, 0x96, 0xea, 0x90, 0xd6, 0xf6, 0x4a, 0x12, 0xa8, 0x8a, 0xe7,
	0x12, 0x47, 0x99, 0xbf, 0xad, 0xc1, 0x99, 0x87, 0x96, 0x7d, 0x3c, 0x0c, 0xd5, 0xc2, 0x93, 0x8b,
	0x88, 0x52, 0x3e, 0x22, 0xe8, 0xa0, 0x03, 0x36, 0xb7, 0x4f, 0xac, 0xe8, 0x10, 0x4b, 0x4f, 0xcf,
	0x71, 0xf0, 0x39, 0xc3, 0xb2, 0xe5, 0xaa, 0x92, 0x2b, 0x57, 0x08, 0xaa, 0x49, 0x37, 0x53, 0xe9,
	0xb1, 0xff, 0xd9, 0x4d, 0x52, 0x9b, 0xb8, 0x49, 0xea, 0xf9, 0x4d, 0xb2, 0x02, 0x75, 0xcf, 0x3a,
	0xc0, 0x5e, 0xcc, 0x5a, 0x9b, 0x66, 0x4f, 0x7c, 0xa1, 0x5d, 0x00, 0x3b, 0xc2, 0x0e, 0xf6, 0x89,
	0x6b, 0x79, 0xa2, 0x43, 0xb9, 0x99, 0xd8, 0x49, 0x63, 0x8c, 0xad, 0x6e, 0x32, 0x9c, 0xa7, 0x8e,
	0xd4, 0x7c, 0x74, 0x13, 0x10, 0x55, 0x97, 0xb6, 0xfb, 0xee, 0xc0, 0x3a, 0x14, 0x02, 0xf3, 0x86,
	0xa5, 0x2d, 0x28, 0x4f, 0x28, 0x81, 0xc9, 0xf4, 0x19, 0xac, 0xa8, 0xa3, 0xed, 0x23, 0x6c, 0x1f,
	0xc7, 0xc3, 0x81, 0x68, 0x63, 0x96, 0xd3, 0x33, 0xba, 0x82, 0x46, 0xad, 0x21, 0xec, 0xcc, 0x98,
	0xf3, 0xc6, 0x06, 0x38, 0xc4, 0xd8, 0x7e, 0x0c, 0xc8, 0x0e, 0x06, 0x21, 0xdd, 0xf2, 0x6e, 0xe0,
	0xf7, 0x07, 0x98, 0x1c, 0x05, 0x8e, 0x38, 0x44, 0x2f, 0xa5, 0x28, 0x7b, 0x8c, 0xc0, 0xce, 0x83,
	0x81, 0x6f, 0x0f, 0xa3, 0x08, 0xfb, 0xa4, 0xef, 0xb9, 0x74, 0x93, 0xce, 0xb3, 0x42, 0xbc, 0x38,
	0xc2, 0x77, 0x29, 0x4c, 0xd5, 0x8b, 0x49, 0x10, 0x31, 0x51, 0x3d, 0x2b, 0x16, 0x67, 0xe1, 0x05,
	0xae, 0x9e, 0xa0, 0x74, 0x29, 0x81, 0xca, 0x61, 0xdc, 0x83, 0xc5, 0x8c, 0xad, 0xde, 0xaa, 0x6a,
	0xff, 0x12, 0x96, 0x55, 0xf3, 0x8b, 0x74, 0xbf, 0x02, 0x75, 0xae, 0xac, 0x60, 0x23, 0xbe, 0xd0,
	0x55, 0x58, 0x70, 0xe3, 0xbe, 0xeb, 0xdb, 0x11, 0x1e, 0x60, 0x9f, 0x58, 0x9e, 0xe8, 0xca, 0xe7,
	0xdd, 0xf8, 0xc9, 0x08, 0x9c, 0x3e, 0x5b, 0x7e, 0x27, 0xf7, 0xc2, 0x3e, 0xb1, 0xc8, 0x30, 0x96,
	0x7b, 0x61, 0xdc, 0xf2, 0x99, 0x20, 0x2d, 0xe7, 0x82, 0x74, 0xea, 0x85, 0xff, 0x55, 0x92, 0x9a,
	0xcb, 0x95, 0x85, 0xe6, 0x06, 0x34, 0xc2, 0x28, 0x38, 0x4c, 0x8e, 0x33, 0xb5, 0x5e, 0xf2, 0x4d,
	0x1b, 0x29, 0x11, 0x15, 0xc3, 0xc8, 0x93, 0x49, 0x96, 0x23, 0x2f, 0x22, 0x8f, 0x9a, 0x19, 0x47,
	0x51, 0x10, 0x89, 0x25, 0xf9, 0x47, 0x7e, 0x5f, 0x57, 0x35, 0xfb, 0x3a, 0x69, 0xa1, 0x6b, 0xa9,
	0x16, 0x5a, 0xa7, 0x4d, 0x5d, 0xab, 0xcd, 0xdf, 0xca, 0xb2, 0x00, 0x72, 0x9d, 0x7a, 0x98, 0x06,
	0x4a, 0x92, 0x5a, 0x54, 0xb9, 0x4b, 0x59, 0xb9, 0x27, 0x5a, 0x35, 0xa7, 0x42, 0x45, 0xa3, 0xc2,
	0xbe, 0xb2, 0xc9, 0xf5, 0xdd, 0xad, 0x4e, 0xba, 0xc2, 0xbd, 0xae, 0xdb, 0x37, 0x35, 0xed, 0xbe,
	0x79, 0xdf, 0x9d, 0xf0, 0xfb, 0x12, 0xac, 0x6a, 0x85, 0x14, 0x71, 0xf1, 0x05, 0xd4, 0x99, 0x3f,
	0x63, 0xa1, 0xda, 0xad, 0x62, 0xd5, 0x64, 0xf7, 0xc9, 0xa6, 0x70, 0xbd, 0xc4, 0x7c, 0xe3, 0x67,
	0xd0, 0x4a, 0xc1, 0x6f, 0x25, 0x64, 0x17, 0xd6, 0x34, 0xab, 0xa9, 0xe7, 0xe9, 0x89, 0x8d, 0xde,
	0xdf, 0xcb, 0xb0, 0x2a, 0xfa, 0xa4, 0x77, 0x89, 0x96, 0x29, 0x9a, 0xa5, 0xa9, 0xe2, 0xe5, 0xb9,
	0x26, 0x5e, 0x3e, 0xcb, 0x76, 0x79, 0x3f, 0xe2, 0x80, 0xb9, 0x0d, 0xcb, 0x42, 0x2e, 0x35, 0x77,
	0x4d, 0xb4, 0xff, 0xfd, 0xc4, 0xfc, 0xda, 0xf9, 0x93, 0xed, 0x6b, 0xfe, 0xa7, 0x0c, 0xe7, 0xf5,
	0x2c, 0x44, 0xb0, 0x66, 0x79, 0x94, 0xa6, 0x6a, 0x68, 0xcb, 0xba, 0xdc, 0x42, 0x79, 0xb9, 0x71,
	0x3f, 0x62, 0xeb, 0xb8, 0xfe, 0x21, 0xf3, 0x65, 0xa3, 0xd7, 0x72, 0xe3, 0x9e, 0x84, 0xa8, 0xbf,
	0x3d, 0x8b, 0x5d, 0x88, 0x31, 0x61, 0xe4, 0x5d, 0xfa, 0x1c, 0x05, 0x85, 0x80, 0x8e, 0x92, 0x58,
	0x6b, 0x99, 0xc4, 0x9a, 0x64, 0xce, 0x7a, 0x3a, 0x73, 0x5e, 0x81, 0x05, 0x07, 0xc7, 0xa4, 0xff,
	0xc6, 0xf5, 0x84, 0x31, 0xc5, 0x7b, 0x02, 0x45, 0x1f, 0xbb, 0x1e, 0x56, 0x53, 0x67, 0x23, 0x9d,
	0x3a, 0xd5, 0x20, 0x6e, 0x66, 0x83, 0xf8, 0x0e, 0x74, 0x64, 0x8c, 0x24, 0x9a, 0xf5, 0x45, 0xc9,
	0xe1, 0x7d, 0xc1, 0x8a, 0xa0, 0x27, 0x5a, 0xf2, 0x50, 0x34, 0xff, 0x5a, 0x82, 0x8f, 0xf4, 0x46,
	0x7f, 0x08, 0xf5, 0x98, 0x21, 0x9a, 0x5b, 0x58, 0xcd, 0xf8, 0x2d, 0xfe, 0x29, 0x72, 0x03, 0x9f,
	0x69, 0xbc, 0x86, 0x56, 0x0a, 0xd6, 0xc4, 0xe3, 0x5d, 0xf5, 0x58, 0x74, 0x35, 0x77, 0x2c, 0xd2,
	0x2d, 0x95, 0x0e, 0xdb, 0xdf, 0x95, 0xa1, 0xba, 0xe3, 0xc6, 0xc7, 0xec, 0xe2, 0xca, 0x11, 0xac,
	0xcb, 0xae, 0xa3, 0x7d, 0x3a, 0x41, 0x50, 0x0d, 0x2d, 0x72, 0x24, 0xf6, 0x2f, 0xfb, 0x4f, 0x31,
	0x72, 0x1a, 0xca, 0x32, 0xc6, 0xfe, 0x53, 0x6b, 0x93, 0x80, 0xc8, 0x4b, 0x32, 0x7e, 0x28, 0x68,
	0x32, 0x84, 0xdd, 0x80, 0xac, 0x42, 0xf3, 0x4d, 0x84, 0xf1, 0xe8, 0xb1, 0xa4, 0xd2, 0x6b, 0x50,
	0x80, 0x11, 0x2f, 0xc3, 0x1c, 0x9f, 0x7b, 0xe0, 0x05, 0xf6, 0x71, 0x2c, 0x7a, 0xfd, 0x16, 0xc3,
	0x1e, 0x32, 0x88, 0x6e, 0x29, 0x36, 0x5f, 0x8c, 0xe0, 0x9d, 0x3d, 0x50, 0x48, 0x0c, 0xa0, 0xde,
	0xa6, 0xff, 0xf8, 0x0a, 0xbc, 0x91, 0x6f, 0x32, 0x44, 0x2e, 0x61, 0x7b, 0xc3, 0x98, 0xe0, 0x88,
	0x0f, 0x00, 0xbe, 0x84, 0xc0, 0xe8, 0x10, 0x7a, 0x84, 0x5c, 0xa2, 0x66, 0x51, 0x7b, 0xf2, 0x55,
	0x68, 0x3a, 0x6e, 0x7c, 0x9c, 0xde, 0x44, 0x0d, 0x0a, 0xc8, 0x4b, 0x1f, 0x46, 0x4c, 0x59, 0x8d,
	0x11, 0xe5, 0x8b, 0x04, 0x23, 0xa6, 0xcc, 0xc7, 0x88, 0xcf, 0xa8, 0x09, 0x55, 0x71, 0xab, 0x19,
	0x71, 0xcd, 0x8f, 0x61, 0x81, 0x8a, 0x92, 0xba, 0x1d, 0x29, 0x92, 0xc3, 0xdc, 0xe3, 0x92, 0xab,
	0x67, 0xde, 0x77, 0x96, 0x7c, 0xf3, 0x1a, 0xb4, 0x52, 0x57, 0x66, 0xa8, 0x0e, 0xe5, 0x57, 0x5f,
	0xb7, 0x67, 0xe8, 0x6f, 0xef, 0x55, 0xbb, 0x84, 0x66, 0xa1, 0xf2, 0xa8, 0xd7, 0x6b, 0x97, 0xb7,
	0xff, 0xb9, 0x02, 0xad, 0xfd, 0x67, 0x3b, 0x4f, 0xf7, 0x71, 0x74, 0xe2, 0xda, 0x18, 0xdd, 0x4f,
	0xce, 0xf4, 0xdc, 0x86, 0xe8, 0x42, 0x36, 0x36, 0x15, 0xdb, 0x1a, 0xb9, 0x13, 0x3d, 0x7a, 0x9c,
	0x70, 0xe0, 0xba, 0xe4, 0x39, 0x28, 0x3a, 0x1a, 0x2b, 0x5b, 0xfc, 0x31, 0x75, 0x4b, 0x3e, 0xa6,
	0x6e, 0x3d, 0x1a, 0x84, 0xe4, 0x14, 0x7d, 0x0e, 0x30, 0x7a, 0x51, 0x41, 0x46, 0x96, 0xc9, 0xc8,
	0xae, 0x1a, 0x19, 0xba, 0x74, 0x77, 0x2b, 0x17, 0xf6, 0x42, 0x9b, 0x4e, 0x32, 0x34, 0x73, 0xbc,
	0xd7, 0x30, 0x79, 0x92, 0x63, 0x22, 0x14, 0x1a, 0xcf, 0x64, 0x9c, 0x2e, 0xdd, 0xc4, 0x1b, 0xbb,
	0x2e, 0x6d, 0x8c, 0xf5, 0xc3, 0x8c, 0xf3, 0x45, 0x2f, 0x3e, 0xe8, 0x21, 0xcc, 0x09, 0xf8, 0x95,
	0x45, 0xec, 0xa3, 0xb1, 0x5c, 0xc6, 0xe0, 0xe6, 0xcc, 0xad, 0x12, 0x7a, 0x0d, 0xe7, 0xc6, 0xbe,
	0xe6, 0xa0, 0x1b, 0xf9, 0x34, 0x34, 0xe6, 0xc5, 0x67, 0xfc, 0x1a, 0xe8, 0x00, 0x8c, 0xf1, 0xcf,
	0x31, 0x68, 0xb3, 0x70, 0x09, 0xa5, 0x05, 0x2a, 0x58, 0xe3, 0x75, 0xb2, 0x86, 0xe6, 0x3d, 0x26,
	0xbf, 0xc6, 0xf8, 0x47, 0x9b, 0xb1, 0x0e, 0x23, 0x1a, 0x3b, 0xc9, 0x27, 0x93, 0x22, 0x3b, 0x65,
	0xde, 0x6d, 0x8c, 0xcd, 0x69, 0x86, 0x72, 0xff, 0x8e, 0xb1, 0x5d, 0xf2, 0xd2, 0x82, 0x8a, 0x79,
	0x4d, 0x6b, 0xbb, 0x97, 0x60, 0x6a, 0x45, 0x99, 0x76, 0x9f, 0x8c, 0xb3, 0xd8, 0xf3, 0xe4, 0x8a,
	0x3f, 0x7d, 0x14, 0x45, 0xe7, 0x8b, 0x2e, 0x08, 0x8c, 0x0b, 0x63, 0xa8, 0x89, 0x45, 0xb2, 0x5c,
	0x79, 0x45, 0xcc, 0x71, 0x55, 0x7a, 0xaf, 0x1c, 0x57, 0xb5, 0x8c, 0x32, 0x1b, 0x2c, 0xeb, 0x3a,
	0x53, 0x74, 0x65, 0x9a, 0xc6, 0xb5, 0xc0, 0xb6, 0x38, 0xe1, 0xab, 0x14, 0xf0, 0x3c, 0x5f, 0x5d,
	0xcb, 0x68, 0x4c, 0xd7, 0x05, 0x98, 0x33, 0xe8, 0x9e, 0xbc, 0xf6, 0xce, 0xd9, 0x58, 0xf3, 0xfa,
	0x60, 0x64, 0xef, 0xbc, 0xd1, 0x8e, 0x9c, 0x2e, 0xd2, 0x59, 0x76, 0xfa, 0x74, 0xe9, 0xf9, 0x36,
	0x34, 0x93, 0xeb, 0x7f, 0x74, 0x2e, 0xc3, 0x22, 0x95, 0x9c, 0x73, 0xcb, 0x3f, 0x80, 0x65, 0xfe,
	0x6f, 0xea, 0x90, 0xcb, 0xb1, 0xf8, 0x22, 0xcb, 0xe2, 0x9d, 0x13, 0xf3, 0x03, 0x80, 0xd1, 0x6b,
	0xc3, 0xd8, 0x8c, 0xba, 0x5a, 0xf0, 0x34, 0x81, 0x1e, 0x40, 0x8b, 0xa3, 0xef, 0x9e, 0x95, 0xbf,
	0x81, 0xa5, 0xdc, 0xed, 0x3b, 0xba, 0x5c, 0x74, 0x33, 0xcf, 0xb5, 0x32, 0x27, 0x5f, 0xde, 0x9b,
	0x33, 0xe8, 0x2b, 0xf9, 0x50, 0x33, 0x7a, 0xd7, 0x40, 0x6b, 0xfa, 0x99, 0xa3, 0x27, 0x8f, 0x82,
	0x28, 0x7f, 0x2e, 0xdf, 0x88, 0xd4, 0x32, 0xbf, 0xae, 0x67, 0x39, 0x55, 0x34, 0x99, 0x33, 0x68,
	0x5f, 0xbe, 0x12, 0x7d, 0xc8, 0xf4, 0x91, 0x61, 0xfa, 0x61, 0xb2, 0xc7, 0x81, 0xd4, 0x5f, 0x4d,
	0x1e, 0xeb, 0x53, 0xdc, 0x92, 0x18, 0x57, 0xa6, 0xb9, 0x6f, 0x60, 0x15, 0xee, 0xdc, 0xd8, 0x2b,
	0x82, 0x54, 0xfd, 0x99, 0x74, 0x8d, 0x50, 0x58, 0x07, 0x12, 0x2f, 0xa6, 0x53, 0xd5, 0x85, 0x71,
	0xc7, 0x1d, 0xce, 0xef, 0x62, 0xf1, 0x69, 0xc8, 0x9c, 0x41, 0xb7, 0x01, 0x46, 0x1d, 0x78, 0xaa,
	0x6d, 0xcb, 0xb5, 0xe5, 0xc6, 0xbc, 0x42, 0x43, 0xf7, 0xf9, 0x44, 0x11, 0x4d, 0xea, 0xc4, 0xe9,
	0x52, 0xd2, 0x4f, 0x61, 0x56, 0x74, 0xdc, 0xe8, 0xac, 0x32, 0x3d, 0x95, 0x8e, 0x32, 0x8b, 0x7e,
	0x09, 0xed, 0xec, 0x8b, 0xc0, 0xd8, 0x1d, 0x7c, 0x31, 0xfb, 0x26, 0xa0, 0x3e, 0x22, 0x1c, 0xd4,
	0xd9, 0xf8, 0x4f, 0xff, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x40, 0x26, 0x21, 0xca, 0x32, 0x28, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SPDKServiceClient is the client API for SPDKService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SPDKServiceClient interface {
	ReplicaCreate(ctx context.Context, in *ReplicaCreateRequest, opts ...grpc.CallOption) (*Replica, error)
	ReplicaDelete(ctx context.Context, in *ReplicaDeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ReplicaGet(ctx context.Context, in *ReplicaGetRequest, opts ...grpc.CallOption) (*Replica, error)
	ReplicaSnapshotCreate(ctx context.Context, in *SnapshotRequest, opts ...grpc.CallOption) (*Replica, error)
	ReplicaSnapshotDelete(ctx context.Context, in *SnapshotRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ReplicaList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ReplicaListResponse, error)
	ReplicaWatch(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (SPDKService_ReplicaWatchClient, error)
	ReplicaRebuildingSrcStart(ctx context.Context, in *ReplicaRebuildingSrcStartRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ReplicaRebuildingSrcFinish(ctx context.Context, in *ReplicaRebuildingSrcFinishRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ReplicaSnapshotShallowCopy(ctx context.Context, in *ReplicaSnapshotShallowCopyRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ReplicaRebuildingDstStart(ctx context.Context, in *ReplicaRebuildingDstStartRequest, opts ...grpc.CallOption) (*ReplicaRebuildingDstStartResponse, error)
	ReplicaRebuildingDstFinish(ctx context.Context, in *ReplicaRebuildingDstFinishRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ReplicaRebuildingDstSnapshotCreate(ctx context.Context, in *SnapshotRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ReplicaBackupCreate(ctx context.Context, in *BackupCreateRequest, opts ...grpc.CallOption) (*BackupCreateResponse, error)
	ReplicaBackupStatus(ctx context.Context, in *BackupStatusRequest, opts ...grpc.CallOption) (*BackupStatusResponse, error)
	ReplicaBackupRestore(ctx context.Context, in *ReplicaBackupRestoreRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ReplicaRestoreStatus(ctx context.Context, in *ReplicaRestoreStatusRequest, opts ...grpc.CallOption) (*ReplicaRestoreStatusResponse, error)
	EngineCreate(ctx context.Context, in *EngineCreateRequest, opts ...grpc.CallOption) (*Engine, error)
	EngineDelete(ctx context.Context, in *EngineDeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	EngineGet(ctx context.Context, in *EngineGetRequest, opts ...grpc.CallOption) (*Engine, error)
	EngineSnapshotCreate(ctx context.Context, in *SnapshotRequest, opts ...grpc.CallOption) (*Engine, error)
	EngineSnapshotDelete(ctx context.Context, in *SnapshotRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	EngineList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*EngineListResponse, error)
	EngineWatch(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (SPDKService_EngineWatchClient, error)
	EngineReplicaList(ctx context.Context, in *EngineReplicaListRequest, opts ...grpc.CallOption) (*EngineReplicaListResponse, error)
	EngineReplicaAdd(ctx context.Context, in *EngineReplicaAddRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	EngineReplicaDelete(ctx context.Context, in *EngineReplicaDeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	EngineBackupCreate(ctx context.Context, in *BackupCreateRequest, opts ...grpc.CallOption) (*BackupCreateResponse, error)
	EngineBackupStatus(ctx context.Context, in *BackupStatusRequest, opts ...grpc.CallOption) (*BackupStatusResponse, error)
	EngineBackupRestore(ctx context.Context, in *EngineBackupRestoreRequest, opts ...grpc.CallOption) (*EngineBackupRestoreResponse, error)
	EngineBackupRestoreFinish(ctx context.Context, in *EngineBackupRestoreFinishRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	EngineRestoreStatus(ctx context.Context, in *RestoreStatusRequest, opts ...grpc.CallOption) (*RestoreStatusResponse, error)
	DiskCreate(ctx context.Context, in *DiskCreateRequest, opts ...grpc.CallOption) (*Disk, error)
	DiskDelete(ctx context.Context, in *DiskDeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DiskGet(ctx context.Context, in *DiskGetRequest, opts ...grpc.CallOption) (*Disk, error)
	VersionDetailGet(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VersionDetailGetReply, error)
}

type sPDKServiceClient struct {
	cc *grpc.ClientConn
}

func NewSPDKServiceClient(cc *grpc.ClientConn) SPDKServiceClient {
	return &sPDKServiceClient{cc}
}

func (c *sPDKServiceClient) ReplicaCreate(ctx context.Context, in *ReplicaCreateRequest, opts ...grpc.CallOption) (*Replica, error) {
	out := new(Replica)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/ReplicaCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) ReplicaDelete(ctx context.Context, in *ReplicaDeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/ReplicaDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) ReplicaGet(ctx context.Context, in *ReplicaGetRequest, opts ...grpc.CallOption) (*Replica, error) {
	out := new(Replica)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/ReplicaGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) ReplicaSnapshotCreate(ctx context.Context, in *SnapshotRequest, opts ...grpc.CallOption) (*Replica, error) {
	out := new(Replica)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/ReplicaSnapshotCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) ReplicaSnapshotDelete(ctx context.Context, in *SnapshotRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/ReplicaSnapshotDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) ReplicaList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ReplicaListResponse, error) {
	out := new(ReplicaListResponse)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/ReplicaList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) ReplicaWatch(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (SPDKService_ReplicaWatchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SPDKService_serviceDesc.Streams[0], "/spdkrpc.SPDKService/ReplicaWatch", opts...)
	if err != nil {
		return nil, err
	}
	x := &sPDKServiceReplicaWatchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SPDKService_ReplicaWatchClient interface {
	Recv() (*empty.Empty, error)
	grpc.ClientStream
}

type sPDKServiceReplicaWatchClient struct {
	grpc.ClientStream
}

func (x *sPDKServiceReplicaWatchClient) Recv() (*empty.Empty, error) {
	m := new(empty.Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *sPDKServiceClient) ReplicaRebuildingSrcStart(ctx context.Context, in *ReplicaRebuildingSrcStartRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/ReplicaRebuildingSrcStart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) ReplicaRebuildingSrcFinish(ctx context.Context, in *ReplicaRebuildingSrcFinishRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/ReplicaRebuildingSrcFinish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) ReplicaSnapshotShallowCopy(ctx context.Context, in *ReplicaSnapshotShallowCopyRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/ReplicaSnapshotShallowCopy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) ReplicaRebuildingDstStart(ctx context.Context, in *ReplicaRebuildingDstStartRequest, opts ...grpc.CallOption) (*ReplicaRebuildingDstStartResponse, error) {
	out := new(ReplicaRebuildingDstStartResponse)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/ReplicaRebuildingDstStart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) ReplicaRebuildingDstFinish(ctx context.Context, in *ReplicaRebuildingDstFinishRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/ReplicaRebuildingDstFinish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) ReplicaRebuildingDstSnapshotCreate(ctx context.Context, in *SnapshotRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/ReplicaRebuildingDstSnapshotCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) ReplicaBackupCreate(ctx context.Context, in *BackupCreateRequest, opts ...grpc.CallOption) (*BackupCreateResponse, error) {
	out := new(BackupCreateResponse)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/ReplicaBackupCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) ReplicaBackupStatus(ctx context.Context, in *BackupStatusRequest, opts ...grpc.CallOption) (*BackupStatusResponse, error) {
	out := new(BackupStatusResponse)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/ReplicaBackupStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) ReplicaBackupRestore(ctx context.Context, in *ReplicaBackupRestoreRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/ReplicaBackupRestore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) ReplicaRestoreStatus(ctx context.Context, in *ReplicaRestoreStatusRequest, opts ...grpc.CallOption) (*ReplicaRestoreStatusResponse, error) {
	out := new(ReplicaRestoreStatusResponse)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/ReplicaRestoreStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) EngineCreate(ctx context.Context, in *EngineCreateRequest, opts ...grpc.CallOption) (*Engine, error) {
	out := new(Engine)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/EngineCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) EngineDelete(ctx context.Context, in *EngineDeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/EngineDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) EngineGet(ctx context.Context, in *EngineGetRequest, opts ...grpc.CallOption) (*Engine, error) {
	out := new(Engine)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/EngineGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) EngineSnapshotCreate(ctx context.Context, in *SnapshotRequest, opts ...grpc.CallOption) (*Engine, error) {
	out := new(Engine)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/EngineSnapshotCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) EngineSnapshotDelete(ctx context.Context, in *SnapshotRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/EngineSnapshotDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) EngineList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*EngineListResponse, error) {
	out := new(EngineListResponse)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/EngineList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) EngineWatch(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (SPDKService_EngineWatchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SPDKService_serviceDesc.Streams[1], "/spdkrpc.SPDKService/EngineWatch", opts...)
	if err != nil {
		return nil, err
	}
	x := &sPDKServiceEngineWatchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SPDKService_EngineWatchClient interface {
	Recv() (*empty.Empty, error)
	grpc.ClientStream
}

type sPDKServiceEngineWatchClient struct {
	grpc.ClientStream
}

func (x *sPDKServiceEngineWatchClient) Recv() (*empty.Empty, error) {
	m := new(empty.Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *sPDKServiceClient) EngineReplicaList(ctx context.Context, in *EngineReplicaListRequest, opts ...grpc.CallOption) (*EngineReplicaListResponse, error) {
	out := new(EngineReplicaListResponse)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/EngineReplicaList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) EngineReplicaAdd(ctx context.Context, in *EngineReplicaAddRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/EngineReplicaAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) EngineReplicaDelete(ctx context.Context, in *EngineReplicaDeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/EngineReplicaDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) EngineBackupCreate(ctx context.Context, in *BackupCreateRequest, opts ...grpc.CallOption) (*BackupCreateResponse, error) {
	out := new(BackupCreateResponse)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/EngineBackupCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) EngineBackupStatus(ctx context.Context, in *BackupStatusRequest, opts ...grpc.CallOption) (*BackupStatusResponse, error) {
	out := new(BackupStatusResponse)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/EngineBackupStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) EngineBackupRestore(ctx context.Context, in *EngineBackupRestoreRequest, opts ...grpc.CallOption) (*EngineBackupRestoreResponse, error) {
	out := new(EngineBackupRestoreResponse)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/EngineBackupRestore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) EngineBackupRestoreFinish(ctx context.Context, in *EngineBackupRestoreFinishRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/EngineBackupRestoreFinish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) EngineRestoreStatus(ctx context.Context, in *RestoreStatusRequest, opts ...grpc.CallOption) (*RestoreStatusResponse, error) {
	out := new(RestoreStatusResponse)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/EngineRestoreStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) DiskCreate(ctx context.Context, in *DiskCreateRequest, opts ...grpc.CallOption) (*Disk, error) {
	out := new(Disk)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/DiskCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) DiskDelete(ctx context.Context, in *DiskDeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/DiskDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) DiskGet(ctx context.Context, in *DiskGetRequest, opts ...grpc.CallOption) (*Disk, error) {
	out := new(Disk)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/DiskGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) VersionDetailGet(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VersionDetailGetReply, error) {
	out := new(VersionDetailGetReply)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/VersionDetailGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SPDKServiceServer is the server API for SPDKService service.
type SPDKServiceServer interface {
	ReplicaCreate(context.Context, *ReplicaCreateRequest) (*Replica, error)
	ReplicaDelete(context.Context, *ReplicaDeleteRequest) (*empty.Empty, error)
	ReplicaGet(context.Context, *ReplicaGetRequest) (*Replica, error)
	ReplicaSnapshotCreate(context.Context, *SnapshotRequest) (*Replica, error)
	ReplicaSnapshotDelete(context.Context, *SnapshotRequest) (*empty.Empty, error)
	ReplicaList(context.Context, *empty.Empty) (*ReplicaListResponse, error)
	ReplicaWatch(*empty.Empty, SPDKService_ReplicaWatchServer) error
	ReplicaRebuildingSrcStart(context.Context, *ReplicaRebuildingSrcStartRequest) (*empty.Empty, error)
	ReplicaRebuildingSrcFinish(context.Context, *ReplicaRebuildingSrcFinishRequest) (*empty.Empty, error)
	ReplicaSnapshotShallowCopy(context.Context, *ReplicaSnapshotShallowCopyRequest) (*empty.Empty, error)
	ReplicaRebuildingDstStart(context.Context, *ReplicaRebuildingDstStartRequest) (*ReplicaRebuildingDstStartResponse, error)
	ReplicaRebuildingDstFinish(context.Context, *ReplicaRebuildingDstFinishRequest) (*empty.Empty, error)
	ReplicaRebuildingDstSnapshotCreate(context.Context, *SnapshotRequest) (*empty.Empty, error)
	ReplicaBackupCreate(context.Context, *BackupCreateRequest) (*BackupCreateResponse, error)
	ReplicaBackupStatus(context.Context, *BackupStatusRequest) (*BackupStatusResponse, error)
	ReplicaBackupRestore(context.Context, *ReplicaBackupRestoreRequest) (*empty.Empty, error)
	ReplicaRestoreStatus(context.Context, *ReplicaRestoreStatusRequest) (*ReplicaRestoreStatusResponse, error)
	EngineCreate(context.Context, *EngineCreateRequest) (*Engine, error)
	EngineDelete(context.Context, *EngineDeleteRequest) (*empty.Empty, error)
	EngineGet(context.Context, *EngineGetRequest) (*Engine, error)
	EngineSnapshotCreate(context.Context, *SnapshotRequest) (*Engine, error)
	EngineSnapshotDelete(context.Context, *SnapshotRequest) (*empty.Empty, error)
	EngineList(context.Context, *empty.Empty) (*EngineListResponse, error)
	EngineWatch(*empty.Empty, SPDKService_EngineWatchServer) error
	EngineReplicaList(context.Context, *EngineReplicaListRequest) (*EngineReplicaListResponse, error)
	EngineReplicaAdd(context.Context, *EngineReplicaAddRequest) (*empty.Empty, error)
	EngineReplicaDelete(context.Context, *EngineReplicaDeleteRequest) (*empty.Empty, error)
	EngineBackupCreate(context.Context, *BackupCreateRequest) (*BackupCreateResponse, error)
	EngineBackupStatus(context.Context, *BackupStatusRequest) (*BackupStatusResponse, error)
	EngineBackupRestore(context.Context, *EngineBackupRestoreRequest) (*EngineBackupRestoreResponse, error)
	EngineBackupRestoreFinish(context.Context, *EngineBackupRestoreFinishRequest) (*empty.Empty, error)
	EngineRestoreStatus(context.Context, *RestoreStatusRequest) (*RestoreStatusResponse, error)
	DiskCreate(context.Context, *DiskCreateRequest) (*Disk, error)
	DiskDelete(context.Context, *DiskDeleteRequest) (*empty.Empty, error)
	DiskGet(context.Context, *DiskGetRequest) (*Disk, error)
	VersionDetailGet(context.Context, *empty.Empty) (*VersionDetailGetReply, error)
}

// UnimplementedSPDKServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSPDKServiceServer struct {
}

func (*UnimplementedSPDKServiceServer) ReplicaCreate(ctx context.Context, req *ReplicaCreateRequest) (*Replica, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicaCreate not implemented")
}
func (*UnimplementedSPDKServiceServer) ReplicaDelete(ctx context.Context, req *ReplicaDeleteRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicaDelete not implemented")
}
func (*UnimplementedSPDKServiceServer) ReplicaGet(ctx context.Context, req *ReplicaGetRequest) (*Replica, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicaGet not implemented")
}
func (*UnimplementedSPDKServiceServer) ReplicaSnapshotCreate(ctx context.Context, req *SnapshotRequest) (*Replica, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicaSnapshotCreate not implemented")
}
func (*UnimplementedSPDKServiceServer) ReplicaSnapshotDelete(ctx context.Context, req *SnapshotRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicaSnapshotDelete not implemented")
}
func (*UnimplementedSPDKServiceServer) ReplicaList(ctx context.Context, req *empty.Empty) (*ReplicaListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicaList not implemented")
}
func (*UnimplementedSPDKServiceServer) ReplicaWatch(req *empty.Empty, srv SPDKService_ReplicaWatchServer) error {
	return status.Errorf(codes.Unimplemented, "method ReplicaWatch not implemented")
}
func (*UnimplementedSPDKServiceServer) ReplicaRebuildingSrcStart(ctx context.Context, req *ReplicaRebuildingSrcStartRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicaRebuildingSrcStart not implemented")
}
func (*UnimplementedSPDKServiceServer) ReplicaRebuildingSrcFinish(ctx context.Context, req *ReplicaRebuildingSrcFinishRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicaRebuildingSrcFinish not implemented")
}
func (*UnimplementedSPDKServiceServer) ReplicaSnapshotShallowCopy(ctx context.Context, req *ReplicaSnapshotShallowCopyRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicaSnapshotShallowCopy not implemented")
}
func (*UnimplementedSPDKServiceServer) ReplicaRebuildingDstStart(ctx context.Context, req *ReplicaRebuildingDstStartRequest) (*ReplicaRebuildingDstStartResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicaRebuildingDstStart not implemented")
}
func (*UnimplementedSPDKServiceServer) ReplicaRebuildingDstFinish(ctx context.Context, req *ReplicaRebuildingDstFinishRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicaRebuildingDstFinish not implemented")
}
func (*UnimplementedSPDKServiceServer) ReplicaRebuildingDstSnapshotCreate(ctx context.Context, req *SnapshotRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicaRebuildingDstSnapshotCreate not implemented")
}
func (*UnimplementedSPDKServiceServer) ReplicaBackupCreate(ctx context.Context, req *BackupCreateRequest) (*BackupCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicaBackupCreate not implemented")
}
func (*UnimplementedSPDKServiceServer) ReplicaBackupStatus(ctx context.Context, req *BackupStatusRequest) (*BackupStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicaBackupStatus not implemented")
}
func (*UnimplementedSPDKServiceServer) ReplicaBackupRestore(ctx context.Context, req *ReplicaBackupRestoreRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicaBackupRestore not implemented")
}
func (*UnimplementedSPDKServiceServer) ReplicaRestoreStatus(ctx context.Context, req *ReplicaRestoreStatusRequest) (*ReplicaRestoreStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicaRestoreStatus not implemented")
}
func (*UnimplementedSPDKServiceServer) EngineCreate(ctx context.Context, req *EngineCreateRequest) (*Engine, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EngineCreate not implemented")
}
func (*UnimplementedSPDKServiceServer) EngineDelete(ctx context.Context, req *EngineDeleteRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EngineDelete not implemented")
}
func (*UnimplementedSPDKServiceServer) EngineGet(ctx context.Context, req *EngineGetRequest) (*Engine, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EngineGet not implemented")
}
func (*UnimplementedSPDKServiceServer) EngineSnapshotCreate(ctx context.Context, req *SnapshotRequest) (*Engine, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EngineSnapshotCreate not implemented")
}
func (*UnimplementedSPDKServiceServer) EngineSnapshotDelete(ctx context.Context, req *SnapshotRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EngineSnapshotDelete not implemented")
}
func (*UnimplementedSPDKServiceServer) EngineList(ctx context.Context, req *empty.Empty) (*EngineListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EngineList not implemented")
}
func (*UnimplementedSPDKServiceServer) EngineWatch(req *empty.Empty, srv SPDKService_EngineWatchServer) error {
	return status.Errorf(codes.Unimplemented, "method EngineWatch not implemented")
}
func (*UnimplementedSPDKServiceServer) EngineReplicaList(ctx context.Context, req *EngineReplicaListRequest) (*EngineReplicaListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EngineReplicaList not implemented")
}
func (*UnimplementedSPDKServiceServer) EngineReplicaAdd(ctx context.Context, req *EngineReplicaAddRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EngineReplicaAdd not implemented")
}
func (*UnimplementedSPDKServiceServer) EngineReplicaDelete(ctx context.Context, req *EngineReplicaDeleteRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EngineReplicaDelete not implemented")
}
func (*UnimplementedSPDKServiceServer) EngineBackupCreate(ctx context.Context, req *BackupCreateRequest) (*BackupCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EngineBackupCreate not implemented")
}
func (*UnimplementedSPDKServiceServer) EngineBackupStatus(ctx context.Context, req *BackupStatusRequest) (*BackupStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EngineBackupStatus not implemented")
}
func (*UnimplementedSPDKServiceServer) EngineBackupRestore(ctx context.Context, req *EngineBackupRestoreRequest) (*EngineBackupRestoreResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EngineBackupRestore not implemented")
}
func (*UnimplementedSPDKServiceServer) EngineBackupRestoreFinish(ctx context.Context, req *EngineBackupRestoreFinishRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EngineBackupRestoreFinish not implemented")
}
func (*UnimplementedSPDKServiceServer) EngineRestoreStatus(ctx context.Context, req *RestoreStatusRequest) (*RestoreStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EngineRestoreStatus not implemented")
}
func (*UnimplementedSPDKServiceServer) DiskCreate(ctx context.Context, req *DiskCreateRequest) (*Disk, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DiskCreate not implemented")
}
func (*UnimplementedSPDKServiceServer) DiskDelete(ctx context.Context, req *DiskDeleteRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DiskDelete not implemented")
}
func (*UnimplementedSPDKServiceServer) DiskGet(ctx context.Context, req *DiskGetRequest) (*Disk, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DiskGet not implemented")
}
func (*UnimplementedSPDKServiceServer) VersionDetailGet(ctx context.Context, req *empty.Empty) (*VersionDetailGetReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VersionDetailGet not implemented")
}

func RegisterSPDKServiceServer(s *grpc.Server, srv SPDKServiceServer) {
	s.RegisterService(&_SPDKService_serviceDesc, srv)
}

func _SPDKService_ReplicaCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicaCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).ReplicaCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/ReplicaCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).ReplicaCreate(ctx, req.(*ReplicaCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_ReplicaDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicaDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).ReplicaDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/ReplicaDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).ReplicaDelete(ctx, req.(*ReplicaDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_ReplicaGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicaGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).ReplicaGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/ReplicaGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).ReplicaGet(ctx, req.(*ReplicaGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_ReplicaSnapshotCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).ReplicaSnapshotCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/ReplicaSnapshotCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).ReplicaSnapshotCreate(ctx, req.(*SnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_ReplicaSnapshotDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).ReplicaSnapshotDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/ReplicaSnapshotDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).ReplicaSnapshotDelete(ctx, req.(*SnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_ReplicaList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).ReplicaList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/ReplicaList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).ReplicaList(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_ReplicaWatch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SPDKServiceServer).ReplicaWatch(m, &sPDKServiceReplicaWatchServer{stream})
}

type SPDKService_ReplicaWatchServer interface {
	Send(*empty.Empty) error
	grpc.ServerStream
}

type sPDKServiceReplicaWatchServer struct {
	grpc.ServerStream
}

func (x *sPDKServiceReplicaWatchServer) Send(m *empty.Empty) error {
	return x.ServerStream.SendMsg(m)
}

func _SPDKService_ReplicaRebuildingSrcStart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicaRebuildingSrcStartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).ReplicaRebuildingSrcStart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/ReplicaRebuildingSrcStart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).ReplicaRebuildingSrcStart(ctx, req.(*ReplicaRebuildingSrcStartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_ReplicaRebuildingSrcFinish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicaRebuildingSrcFinishRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).ReplicaRebuildingSrcFinish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/ReplicaRebuildingSrcFinish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).ReplicaRebuildingSrcFinish(ctx, req.(*ReplicaRebuildingSrcFinishRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_ReplicaSnapshotShallowCopy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicaSnapshotShallowCopyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).ReplicaSnapshotShallowCopy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/ReplicaSnapshotShallowCopy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).ReplicaSnapshotShallowCopy(ctx, req.(*ReplicaSnapshotShallowCopyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_ReplicaRebuildingDstStart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicaRebuildingDstStartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).ReplicaRebuildingDstStart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/ReplicaRebuildingDstStart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).ReplicaRebuildingDstStart(ctx, req.(*ReplicaRebuildingDstStartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_ReplicaRebuildingDstFinish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicaRebuildingDstFinishRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).ReplicaRebuildingDstFinish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/ReplicaRebuildingDstFinish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).ReplicaRebuildingDstFinish(ctx, req.(*ReplicaRebuildingDstFinishRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_ReplicaRebuildingDstSnapshotCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).ReplicaRebuildingDstSnapshotCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/ReplicaRebuildingDstSnapshotCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).ReplicaRebuildingDstSnapshotCreate(ctx, req.(*SnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_ReplicaBackupCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackupCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).ReplicaBackupCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/ReplicaBackupCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).ReplicaBackupCreate(ctx, req.(*BackupCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_ReplicaBackupStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackupStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).ReplicaBackupStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/ReplicaBackupStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).ReplicaBackupStatus(ctx, req.(*BackupStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_ReplicaBackupRestore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicaBackupRestoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).ReplicaBackupRestore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/ReplicaBackupRestore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).ReplicaBackupRestore(ctx, req.(*ReplicaBackupRestoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_ReplicaRestoreStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicaRestoreStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).ReplicaRestoreStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/ReplicaRestoreStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).ReplicaRestoreStatus(ctx, req.(*ReplicaRestoreStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_EngineCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EngineCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).EngineCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/EngineCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).EngineCreate(ctx, req.(*EngineCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_EngineDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EngineDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).EngineDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/EngineDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).EngineDelete(ctx, req.(*EngineDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_EngineGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EngineGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).EngineGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/EngineGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).EngineGet(ctx, req.(*EngineGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_EngineSnapshotCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).EngineSnapshotCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/EngineSnapshotCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).EngineSnapshotCreate(ctx, req.(*SnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_EngineSnapshotDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).EngineSnapshotDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/EngineSnapshotDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).EngineSnapshotDelete(ctx, req.(*SnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_EngineList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).EngineList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/EngineList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).EngineList(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_EngineWatch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SPDKServiceServer).EngineWatch(m, &sPDKServiceEngineWatchServer{stream})
}

type SPDKService_EngineWatchServer interface {
	Send(*empty.Empty) error
	grpc.ServerStream
}

type sPDKServiceEngineWatchServer struct {
	grpc.ServerStream
}

func (x *sPDKServiceEngineWatchServer) Send(m *empty.Empty) error {
	return x.ServerStream.SendMsg(m)
}

func _SPDKService_EngineReplicaList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EngineReplicaListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).EngineReplicaList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/EngineReplicaList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).EngineReplicaList(ctx, req.(*EngineReplicaListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_EngineReplicaAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EngineReplicaAddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).EngineReplicaAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/EngineReplicaAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).EngineReplicaAdd(ctx, req.(*EngineReplicaAddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_EngineReplicaDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EngineReplicaDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).EngineReplicaDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/EngineReplicaDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).EngineReplicaDelete(ctx, req.(*EngineReplicaDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_EngineBackupCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackupCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).EngineBackupCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/EngineBackupCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).EngineBackupCreate(ctx, req.(*BackupCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_EngineBackupStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackupStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).EngineBackupStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/EngineBackupStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).EngineBackupStatus(ctx, req.(*BackupStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_EngineBackupRestore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EngineBackupRestoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).EngineBackupRestore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/EngineBackupRestore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).EngineBackupRestore(ctx, req.(*EngineBackupRestoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_EngineBackupRestoreFinish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EngineBackupRestoreFinishRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).EngineBackupRestoreFinish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/EngineBackupRestoreFinish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).EngineBackupRestoreFinish(ctx, req.(*EngineBackupRestoreFinishRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_EngineRestoreStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RestoreStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).EngineRestoreStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/EngineRestoreStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).EngineRestoreStatus(ctx, req.(*RestoreStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_DiskCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiskCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).DiskCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/DiskCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).DiskCreate(ctx, req.(*DiskCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_DiskDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiskDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).DiskDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/DiskDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).DiskDelete(ctx, req.(*DiskDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_DiskGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiskGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).DiskGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/DiskGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).DiskGet(ctx, req.(*DiskGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_VersionDetailGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).VersionDetailGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/VersionDetailGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).VersionDetailGet(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _SPDKService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "spdkrpc.SPDKService",
	HandlerType: (*SPDKServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReplicaCreate",
			Handler:    _SPDKService_ReplicaCreate_Handler,
		},
		{
			MethodName: "ReplicaDelete",
			Handler:    _SPDKService_ReplicaDelete_Handler,
		},
		{
			MethodName: "ReplicaGet",
			Handler:    _SPDKService_ReplicaGet_Handler,
		},
		{
			MethodName: "ReplicaSnapshotCreate",
			Handler:    _SPDKService_ReplicaSnapshotCreate_Handler,
		},
		{
			MethodName: "ReplicaSnapshotDelete",
			Handler:    _SPDKService_ReplicaSnapshotDelete_Handler,
		},
		{
			MethodName: "ReplicaList",
			Handler:    _SPDKService_ReplicaList_Handler,
		},
		{
			MethodName: "ReplicaRebuildingSrcStart",
			Handler:    _SPDKService_ReplicaRebuildingSrcStart_Handler,
		},
		{
			MethodName: "ReplicaRebuildingSrcFinish",
			Handler:    _SPDKService_ReplicaRebuildingSrcFinish_Handler,
		},
		{
			MethodName: "ReplicaSnapshotShallowCopy",
			Handler:    _SPDKService_ReplicaSnapshotShallowCopy_Handler,
		},
		{
			MethodName: "ReplicaRebuildingDstStart",
			Handler:    _SPDKService_ReplicaRebuildingDstStart_Handler,
		},
		{
			MethodName: "ReplicaRebuildingDstFinish",
			Handler:    _SPDKService_ReplicaRebuildingDstFinish_Handler,
		},
		{
			MethodName: "ReplicaRebuildingDstSnapshotCreate",
			Handler:    _SPDKService_ReplicaRebuildingDstSnapshotCreate_Handler,
		},
		{
			MethodName: "ReplicaBackupCreate",
			Handler:    _SPDKService_ReplicaBackupCreate_Handler,
		},
		{
			MethodName: "ReplicaBackupStatus",
			Handler:    _SPDKService_ReplicaBackupStatus_Handler,
		},
		{
			MethodName: "ReplicaBackupRestore",
			Handler:    _SPDKService_ReplicaBackupRestore_Handler,
		},
		{
			MethodName: "ReplicaRestoreStatus",
			Handler:    _SPDKService_ReplicaRestoreStatus_Handler,
		},
		{
			MethodName: "EngineCreate",
			Handler:    _SPDKService_EngineCreate_Handler,
		},
		{
			MethodName: "EngineDelete",
			Handler:    _SPDKService_EngineDelete_Handler,
		},
		{
			MethodName: "EngineGet",
			Handler:    _SPDKService_EngineGet_Handler,
		},
		{
			MethodName: "EngineSnapshotCreate",
			Handler:    _SPDKService_EngineSnapshotCreate_Handler,
		},
		{
			MethodName: "EngineSnapshotDelete",
			Handler:    _SPDKService_EngineSnapshotDelete_Handler,
		},
		{
			MethodName: "EngineList",
			Handler:    _SPDKService_EngineList_Handler,
		},
		{
			MethodName: "EngineReplicaList",
			Handler:    _SPDKService_EngineReplicaList_Handler,
		},
		{
			MethodName: "EngineReplicaAdd",
			Handler:    _SPDKService_EngineReplicaAdd_Handler,
		},
		{
			MethodName: "EngineReplicaDelete",
			Handler:    _SPDKService_EngineReplicaDelete_Handler,
		},
		{
			MethodName: "EngineBackupCreate",
			Handler:    _SPDKService_EngineBackupCreate_Handler,
		},
		{
			MethodName: "EngineBackupStatus",
			Handler:    _SPDKService_EngineBackupStatus_Handler,
		},
		{
			MethodName: "EngineBackupRestore",
			Handler:    _SPDKService_EngineBackupRestore_Handler,
		},
		{
			MethodName: "EngineBackupRestoreFinish",
			Handler:    _SPDKService_EngineBackupRestoreFinish_Handler,
		},
		{
			MethodName: "EngineRestoreStatus",
			Handler:    _SPDKService_EngineRestoreStatus_Handler,
		},
		{
			MethodName: "DiskCreate",
			Handler:    _SPDKService_DiskCreate_Handler,
		},
		{
			MethodName: "DiskDelete",
			Handler:    _SPDKService_DiskDelete_Handler,
		},
		{
			MethodName: "DiskGet",
			Handler:    _SPDKService_DiskGet_Handler,
		},
		{
			MethodName: "VersionDetailGet",
			Handler:    _SPDKService_VersionDetailGet_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ReplicaWatch",
			Handler:       _SPDKService_ReplicaWatch_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "EngineWatch",
			Handler:       _SPDKService_EngineWatch_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "spdk.proto",
}
