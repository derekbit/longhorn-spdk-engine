// Code generated by protoc-gen-go. DO NOT EDIT.
// source: spdk.proto

package spdkrpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReplicaMode int32

const (
	ReplicaMode_WO  ReplicaMode = 0
	ReplicaMode_RW  ReplicaMode = 1
	ReplicaMode_ERR ReplicaMode = 2
)

var ReplicaMode_name = map[int32]string{
	0: "WO",
	1: "RW",
	2: "ERR",
}

var ReplicaMode_value = map[string]int32{
	"WO":  0,
	"RW":  1,
	"ERR": 2,
}

func (x ReplicaMode) String() string {
	return proto.EnumName(ReplicaMode_name, int32(x))
}

func (ReplicaMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{0}
}

type Lvol struct {
	Name                 string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uuid                 string          `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	SpecSize             uint64          `protobuf:"varint,3,opt,name=spec_size,json=specSize,proto3" json:"spec_size,omitempty"`
	ActualSize           uint64          `protobuf:"varint,4,opt,name=actual_size,json=actualSize,proto3" json:"actual_size,omitempty"`
	Parent               string          `protobuf:"bytes,5,opt,name=parent,proto3" json:"parent,omitempty"`
	Children             map[string]bool `protobuf:"bytes,6,rep,name=children,proto3" json:"children,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Lvol) Reset()         { *m = Lvol{} }
func (m *Lvol) String() string { return proto.CompactTextString(m) }
func (*Lvol) ProtoMessage()    {}
func (*Lvol) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{0}
}

func (m *Lvol) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Lvol.Unmarshal(m, b)
}
func (m *Lvol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Lvol.Marshal(b, m, deterministic)
}
func (m *Lvol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Lvol.Merge(m, src)
}
func (m *Lvol) XXX_Size() int {
	return xxx_messageInfo_Lvol.Size(m)
}
func (m *Lvol) XXX_DiscardUnknown() {
	xxx_messageInfo_Lvol.DiscardUnknown(m)
}

var xxx_messageInfo_Lvol proto.InternalMessageInfo

func (m *Lvol) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Lvol) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Lvol) GetSpecSize() uint64 {
	if m != nil {
		return m.SpecSize
	}
	return 0
}

func (m *Lvol) GetActualSize() uint64 {
	if m != nil {
		return m.ActualSize
	}
	return 0
}

func (m *Lvol) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *Lvol) GetChildren() map[string]bool {
	if m != nil {
		return m.Children
	}
	return nil
}

type Replica struct {
	Name                 string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uuid                 string           `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	LvsName              string           `protobuf:"bytes,3,opt,name=lvs_name,json=lvsName,proto3" json:"lvs_name,omitempty"`
	LvsUuid              string           `protobuf:"bytes,4,opt,name=lvs_uuid,json=lvsUuid,proto3" json:"lvs_uuid,omitempty"`
	SpecSize             uint64           `protobuf:"varint,5,opt,name=spec_size,json=specSize,proto3" json:"spec_size,omitempty"`
	ActualSize           uint64           `protobuf:"varint,6,opt,name=actual_size,json=actualSize,proto3" json:"actual_size,omitempty"`
	Snapshots            map[string]*Lvol `protobuf:"bytes,7,rep,name=snapshots,proto3" json:"snapshots,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Rebuilding           bool             `protobuf:"varint,8,opt,name=rebuilding,proto3" json:"rebuilding,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Replica) Reset()         { *m = Replica{} }
func (m *Replica) String() string { return proto.CompactTextString(m) }
func (*Replica) ProtoMessage()    {}
func (*Replica) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{1}
}

func (m *Replica) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Replica.Unmarshal(m, b)
}
func (m *Replica) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Replica.Marshal(b, m, deterministic)
}
func (m *Replica) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Replica.Merge(m, src)
}
func (m *Replica) XXX_Size() int {
	return xxx_messageInfo_Replica.Size(m)
}
func (m *Replica) XXX_DiscardUnknown() {
	xxx_messageInfo_Replica.DiscardUnknown(m)
}

var xxx_messageInfo_Replica proto.InternalMessageInfo

func (m *Replica) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Replica) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Replica) GetLvsName() string {
	if m != nil {
		return m.LvsName
	}
	return ""
}

func (m *Replica) GetLvsUuid() string {
	if m != nil {
		return m.LvsUuid
	}
	return ""
}

func (m *Replica) GetSpecSize() uint64 {
	if m != nil {
		return m.SpecSize
	}
	return 0
}

func (m *Replica) GetActualSize() uint64 {
	if m != nil {
		return m.ActualSize
	}
	return 0
}

func (m *Replica) GetSnapshots() map[string]*Lvol {
	if m != nil {
		return m.Snapshots
	}
	return nil
}

func (m *Replica) GetRebuilding() bool {
	if m != nil {
		return m.Rebuilding
	}
	return false
}

type ReplicaCreateRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	LvsName              string   `protobuf:"bytes,2,opt,name=lvs_name,json=lvsName,proto3" json:"lvs_name,omitempty"`
	LvsUuid              string   `protobuf:"bytes,3,opt,name=lvs_uuid,json=lvsUuid,proto3" json:"lvs_uuid,omitempty"`
	SpecSize             uint64   `protobuf:"varint,4,opt,name=spec_size,json=specSize,proto3" json:"spec_size,omitempty"`
	ExposeRequired       bool     `protobuf:"varint,5,opt,name=expose_required,json=exposeRequired,proto3" json:"expose_required,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaCreateRequest) Reset()         { *m = ReplicaCreateRequest{} }
func (m *ReplicaCreateRequest) String() string { return proto.CompactTextString(m) }
func (*ReplicaCreateRequest) ProtoMessage()    {}
func (*ReplicaCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{2}
}

func (m *ReplicaCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaCreateRequest.Unmarshal(m, b)
}
func (m *ReplicaCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaCreateRequest.Marshal(b, m, deterministic)
}
func (m *ReplicaCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaCreateRequest.Merge(m, src)
}
func (m *ReplicaCreateRequest) XXX_Size() int {
	return xxx_messageInfo_ReplicaCreateRequest.Size(m)
}
func (m *ReplicaCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaCreateRequest proto.InternalMessageInfo

func (m *ReplicaCreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReplicaCreateRequest) GetLvsName() string {
	if m != nil {
		return m.LvsName
	}
	return ""
}

func (m *ReplicaCreateRequest) GetLvsUuid() string {
	if m != nil {
		return m.LvsUuid
	}
	return ""
}

func (m *ReplicaCreateRequest) GetSpecSize() uint64 {
	if m != nil {
		return m.SpecSize
	}
	return 0
}

func (m *ReplicaCreateRequest) GetExposeRequired() bool {
	if m != nil {
		return m.ExposeRequired
	}
	return false
}

type ReplicaDeleteRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CleanupRequired      bool     `protobuf:"varint,2,opt,name=cleanup_required,json=cleanupRequired,proto3" json:"cleanup_required,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaDeleteRequest) Reset()         { *m = ReplicaDeleteRequest{} }
func (m *ReplicaDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*ReplicaDeleteRequest) ProtoMessage()    {}
func (*ReplicaDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{3}
}

func (m *ReplicaDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaDeleteRequest.Unmarshal(m, b)
}
func (m *ReplicaDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaDeleteRequest.Marshal(b, m, deterministic)
}
func (m *ReplicaDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaDeleteRequest.Merge(m, src)
}
func (m *ReplicaDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_ReplicaDeleteRequest.Size(m)
}
func (m *ReplicaDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaDeleteRequest proto.InternalMessageInfo

func (m *ReplicaDeleteRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReplicaDeleteRequest) GetCleanupRequired() bool {
	if m != nil {
		return m.CleanupRequired
	}
	return false
}

type ReplicaGetRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaGetRequest) Reset()         { *m = ReplicaGetRequest{} }
func (m *ReplicaGetRequest) String() string { return proto.CompactTextString(m) }
func (*ReplicaGetRequest) ProtoMessage()    {}
func (*ReplicaGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{4}
}

func (m *ReplicaGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaGetRequest.Unmarshal(m, b)
}
func (m *ReplicaGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaGetRequest.Marshal(b, m, deterministic)
}
func (m *ReplicaGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaGetRequest.Merge(m, src)
}
func (m *ReplicaGetRequest) XXX_Size() int {
	return xxx_messageInfo_ReplicaGetRequest.Size(m)
}
func (m *ReplicaGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaGetRequest proto.InternalMessageInfo

func (m *ReplicaGetRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Engine struct {
	Name                 string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uuid                 string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	SpecSize             uint64                 `protobuf:"varint,3,opt,name=spec_size,json=specSize,proto3" json:"spec_size,omitempty"`
	ActualSize           uint64                 `protobuf:"varint,4,opt,name=actual_size,json=actualSize,proto3" json:"actual_size,omitempty"`
	Ip                   string                 `protobuf:"bytes,5,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 int32                  `protobuf:"varint,6,opt,name=port,proto3" json:"port,omitempty"`
	ReplicaAddressMap    map[string]string      `protobuf:"bytes,7,rep,name=replica_address_map,json=replicaAddressMap,proto3" json:"replica_address_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ReplicaModeMap       map[string]ReplicaMode `protobuf:"bytes,8,rep,name=replica_mode_map,json=replicaModeMap,proto3" json:"replica_mode_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=spdkrpc.ReplicaMode"`
	Endpoint             string                 `protobuf:"bytes,9,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Engine) Reset()         { *m = Engine{} }
func (m *Engine) String() string { return proto.CompactTextString(m) }
func (*Engine) ProtoMessage()    {}
func (*Engine) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{5}
}

func (m *Engine) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Engine.Unmarshal(m, b)
}
func (m *Engine) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Engine.Marshal(b, m, deterministic)
}
func (m *Engine) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Engine.Merge(m, src)
}
func (m *Engine) XXX_Size() int {
	return xxx_messageInfo_Engine.Size(m)
}
func (m *Engine) XXX_DiscardUnknown() {
	xxx_messageInfo_Engine.DiscardUnknown(m)
}

var xxx_messageInfo_Engine proto.InternalMessageInfo

func (m *Engine) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Engine) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Engine) GetSpecSize() uint64 {
	if m != nil {
		return m.SpecSize
	}
	return 0
}

func (m *Engine) GetActualSize() uint64 {
	if m != nil {
		return m.ActualSize
	}
	return 0
}

func (m *Engine) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Engine) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Engine) GetReplicaAddressMap() map[string]string {
	if m != nil {
		return m.ReplicaAddressMap
	}
	return nil
}

func (m *Engine) GetReplicaModeMap() map[string]ReplicaMode {
	if m != nil {
		return m.ReplicaModeMap
	}
	return nil
}

func (m *Engine) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

type EngineCreateRequest struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SpecSize             uint64            `protobuf:"varint,2,opt,name=spec_size,json=specSize,proto3" json:"spec_size,omitempty"`
	ReplicaAddressMap    map[string]string `protobuf:"bytes,3,rep,name=replica_address_map,json=replicaAddressMap,proto3" json:"replica_address_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Frontend             string            `protobuf:"bytes,4,opt,name=frontend,proto3" json:"frontend,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *EngineCreateRequest) Reset()         { *m = EngineCreateRequest{} }
func (m *EngineCreateRequest) String() string { return proto.CompactTextString(m) }
func (*EngineCreateRequest) ProtoMessage()    {}
func (*EngineCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{6}
}

func (m *EngineCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EngineCreateRequest.Unmarshal(m, b)
}
func (m *EngineCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EngineCreateRequest.Marshal(b, m, deterministic)
}
func (m *EngineCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EngineCreateRequest.Merge(m, src)
}
func (m *EngineCreateRequest) XXX_Size() int {
	return xxx_messageInfo_EngineCreateRequest.Size(m)
}
func (m *EngineCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EngineCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EngineCreateRequest proto.InternalMessageInfo

func (m *EngineCreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EngineCreateRequest) GetSpecSize() uint64 {
	if m != nil {
		return m.SpecSize
	}
	return 0
}

func (m *EngineCreateRequest) GetReplicaAddressMap() map[string]string {
	if m != nil {
		return m.ReplicaAddressMap
	}
	return nil
}

func (m *EngineCreateRequest) GetFrontend() string {
	if m != nil {
		return m.Frontend
	}
	return ""
}

type EngineDeleteRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EngineDeleteRequest) Reset()         { *m = EngineDeleteRequest{} }
func (m *EngineDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*EngineDeleteRequest) ProtoMessage()    {}
func (*EngineDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{7}
}

func (m *EngineDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EngineDeleteRequest.Unmarshal(m, b)
}
func (m *EngineDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EngineDeleteRequest.Marshal(b, m, deterministic)
}
func (m *EngineDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EngineDeleteRequest.Merge(m, src)
}
func (m *EngineDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_EngineDeleteRequest.Size(m)
}
func (m *EngineDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EngineDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EngineDeleteRequest proto.InternalMessageInfo

func (m *EngineDeleteRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type EngineGetRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EngineGetRequest) Reset()         { *m = EngineGetRequest{} }
func (m *EngineGetRequest) String() string { return proto.CompactTextString(m) }
func (*EngineGetRequest) ProtoMessage()    {}
func (*EngineGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{8}
}

func (m *EngineGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EngineGetRequest.Unmarshal(m, b)
}
func (m *EngineGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EngineGetRequest.Marshal(b, m, deterministic)
}
func (m *EngineGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EngineGetRequest.Merge(m, src)
}
func (m *EngineGetRequest) XXX_Size() int {
	return xxx_messageInfo_EngineGetRequest.Size(m)
}
func (m *EngineGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EngineGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EngineGetRequest proto.InternalMessageInfo

func (m *EngineGetRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SnapshotRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SnapshotName         string   `protobuf:"bytes,2,opt,name=snapshot_name,json=snapshotName,proto3" json:"snapshot_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnapshotRequest) Reset()         { *m = SnapshotRequest{} }
func (m *SnapshotRequest) String() string { return proto.CompactTextString(m) }
func (*SnapshotRequest) ProtoMessage()    {}
func (*SnapshotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{9}
}

func (m *SnapshotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapshotRequest.Unmarshal(m, b)
}
func (m *SnapshotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapshotRequest.Marshal(b, m, deterministic)
}
func (m *SnapshotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapshotRequest.Merge(m, src)
}
func (m *SnapshotRequest) XXX_Size() int {
	return xxx_messageInfo_SnapshotRequest.Size(m)
}
func (m *SnapshotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapshotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SnapshotRequest proto.InternalMessageInfo

func (m *SnapshotRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SnapshotRequest) GetSnapshotName() string {
	if m != nil {
		return m.SnapshotName
	}
	return ""
}

type VersionOutput struct {
	Version                 string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	GitCommit               string   `protobuf:"bytes,2,opt,name=gitCommit,proto3" json:"gitCommit,omitempty"`
	BuildDate               string   `protobuf:"bytes,3,opt,name=buildDate,proto3" json:"buildDate,omitempty"`
	CliAPIVersion           int64    `protobuf:"varint,4,opt,name=cliAPIVersion,proto3" json:"cliAPIVersion,omitempty"`
	CliAPIMinVersion        int64    `protobuf:"varint,5,opt,name=cliAPIMinVersion,proto3" json:"cliAPIMinVersion,omitempty"`
	ControllerAPIVersion    int64    `protobuf:"varint,6,opt,name=controllerAPIVersion,proto3" json:"controllerAPIVersion,omitempty"`
	ControllerAPIMinVersion int64    `protobuf:"varint,7,opt,name=controllerAPIMinVersion,proto3" json:"controllerAPIMinVersion,omitempty"`
	DataFormatVersion       int64    `protobuf:"varint,8,opt,name=dataFormatVersion,proto3" json:"dataFormatVersion,omitempty"`
	DataFormatMinVersion    int64    `protobuf:"varint,9,opt,name=dataFormatMinVersion,proto3" json:"dataFormatMinVersion,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *VersionOutput) Reset()         { *m = VersionOutput{} }
func (m *VersionOutput) String() string { return proto.CompactTextString(m) }
func (*VersionOutput) ProtoMessage()    {}
func (*VersionOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{10}
}

func (m *VersionOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionOutput.Unmarshal(m, b)
}
func (m *VersionOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionOutput.Marshal(b, m, deterministic)
}
func (m *VersionOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionOutput.Merge(m, src)
}
func (m *VersionOutput) XXX_Size() int {
	return xxx_messageInfo_VersionOutput.Size(m)
}
func (m *VersionOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionOutput.DiscardUnknown(m)
}

var xxx_messageInfo_VersionOutput proto.InternalMessageInfo

func (m *VersionOutput) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *VersionOutput) GetGitCommit() string {
	if m != nil {
		return m.GitCommit
	}
	return ""
}

func (m *VersionOutput) GetBuildDate() string {
	if m != nil {
		return m.BuildDate
	}
	return ""
}

func (m *VersionOutput) GetCliAPIVersion() int64 {
	if m != nil {
		return m.CliAPIVersion
	}
	return 0
}

func (m *VersionOutput) GetCliAPIMinVersion() int64 {
	if m != nil {
		return m.CliAPIMinVersion
	}
	return 0
}

func (m *VersionOutput) GetControllerAPIVersion() int64 {
	if m != nil {
		return m.ControllerAPIVersion
	}
	return 0
}

func (m *VersionOutput) GetControllerAPIMinVersion() int64 {
	if m != nil {
		return m.ControllerAPIMinVersion
	}
	return 0
}

func (m *VersionOutput) GetDataFormatVersion() int64 {
	if m != nil {
		return m.DataFormatVersion
	}
	return 0
}

func (m *VersionOutput) GetDataFormatMinVersion() int64 {
	if m != nil {
		return m.DataFormatMinVersion
	}
	return 0
}

type VersionDetailGetReply struct {
	Version              *VersionOutput `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *VersionDetailGetReply) Reset()         { *m = VersionDetailGetReply{} }
func (m *VersionDetailGetReply) String() string { return proto.CompactTextString(m) }
func (*VersionDetailGetReply) ProtoMessage()    {}
func (*VersionDetailGetReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f86dfec2b2acc42c, []int{11}
}

func (m *VersionDetailGetReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionDetailGetReply.Unmarshal(m, b)
}
func (m *VersionDetailGetReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionDetailGetReply.Marshal(b, m, deterministic)
}
func (m *VersionDetailGetReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionDetailGetReply.Merge(m, src)
}
func (m *VersionDetailGetReply) XXX_Size() int {
	return xxx_messageInfo_VersionDetailGetReply.Size(m)
}
func (m *VersionDetailGetReply) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionDetailGetReply.DiscardUnknown(m)
}

var xxx_messageInfo_VersionDetailGetReply proto.InternalMessageInfo

func (m *VersionDetailGetReply) GetVersion() *VersionOutput {
	if m != nil {
		return m.Version
	}
	return nil
}

func init() {
	proto.RegisterEnum("spdkrpc.ReplicaMode", ReplicaMode_name, ReplicaMode_value)
	proto.RegisterType((*Lvol)(nil), "spdkrpc.Lvol")
	proto.RegisterMapType((map[string]bool)(nil), "spdkrpc.Lvol.ChildrenEntry")
	proto.RegisterType((*Replica)(nil), "spdkrpc.Replica")
	proto.RegisterMapType((map[string]*Lvol)(nil), "spdkrpc.Replica.SnapshotsEntry")
	proto.RegisterType((*ReplicaCreateRequest)(nil), "spdkrpc.ReplicaCreateRequest")
	proto.RegisterType((*ReplicaDeleteRequest)(nil), "spdkrpc.ReplicaDeleteRequest")
	proto.RegisterType((*ReplicaGetRequest)(nil), "spdkrpc.ReplicaGetRequest")
	proto.RegisterType((*Engine)(nil), "spdkrpc.Engine")
	proto.RegisterMapType((map[string]string)(nil), "spdkrpc.Engine.ReplicaAddressMapEntry")
	proto.RegisterMapType((map[string]ReplicaMode)(nil), "spdkrpc.Engine.ReplicaModeMapEntry")
	proto.RegisterType((*EngineCreateRequest)(nil), "spdkrpc.EngineCreateRequest")
	proto.RegisterMapType((map[string]string)(nil), "spdkrpc.EngineCreateRequest.ReplicaAddressMapEntry")
	proto.RegisterType((*EngineDeleteRequest)(nil), "spdkrpc.EngineDeleteRequest")
	proto.RegisterType((*EngineGetRequest)(nil), "spdkrpc.EngineGetRequest")
	proto.RegisterType((*SnapshotRequest)(nil), "spdkrpc.SnapshotRequest")
	proto.RegisterType((*VersionOutput)(nil), "spdkrpc.VersionOutput")
	proto.RegisterType((*VersionDetailGetReply)(nil), "spdkrpc.VersionDetailGetReply")
}

func init() { proto.RegisterFile("spdk.proto", fileDescriptor_f86dfec2b2acc42c) }

var fileDescriptor_f86dfec2b2acc42c = []byte{
	// 1015 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xdf, 0x6e, 0xdb, 0xb6,
	0x17, 0xfe, 0x59, 0xf2, 0x1f, 0xf9, 0xb8, 0x76, 0x14, 0xc6, 0xcd, 0x4f, 0x55, 0xba, 0x36, 0x70,
	0x86, 0x34, 0x0d, 0x06, 0x77, 0x70, 0x2f, 0x5a, 0x74, 0x28, 0xb0, 0x20, 0x4e, 0xb7, 0xb4, 0xcb,
	0x5a, 0x28, 0x68, 0x73, 0x69, 0x28, 0x12, 0xeb, 0x12, 0x95, 0x25, 0x95, 0xa2, 0x8c, 0xa5, 0x2f,
	0xb0, 0xab, 0xbd, 0xc6, 0xde, 0x67, 0xef, 0xb2, 0xab, 0x5e, 0x0d, 0x22, 0x29, 0x59, 0x92, 0x65,
	0x27, 0x1b, 0x86, 0x5d, 0x99, 0xfc, 0xce, 0xe1, 0xc7, 0xc3, 0xef, 0xfc, 0xb1, 0x00, 0xa2, 0xd0,
	0xfd, 0x38, 0x0c, 0x69, 0xc0, 0x02, 0xd4, 0x4a, 0xd6, 0x34, 0x74, 0xcc, 0x9d, 0x69, 0x10, 0x4c,
	0x3d, 0xfc, 0x88, 0xc3, 0x97, 0xf1, 0xfb, 0x47, 0x78, 0x16, 0xb2, 0x2b, 0xe1, 0x35, 0xf8, 0x52,
	0x83, 0xfa, 0x4f, 0xf3, 0xc0, 0x43, 0x08, 0xea, 0xbe, 0x3d, 0xc3, 0x46, 0x6d, 0xb7, 0x76, 0xd0,
	0xb6, 0xf8, 0x3a, 0xc1, 0xe2, 0x98, 0xb8, 0x86, 0x22, 0xb0, 0x64, 0x8d, 0x76, 0xa0, 0x1d, 0x85,
	0xd8, 0x99, 0x44, 0xe4, 0x33, 0x36, 0xd4, 0xdd, 0xda, 0x41, 0xdd, 0xd2, 0x12, 0xe0, 0x9c, 0x7c,
	0xc6, 0xe8, 0x3e, 0x74, 0x6c, 0x87, 0xc5, 0xb6, 0x27, 0xcc, 0x75, 0x6e, 0x06, 0x01, 0x71, 0x87,
	0x6d, 0x68, 0x86, 0x36, 0xc5, 0x3e, 0x33, 0x1a, 0x9c, 0x53, 0xee, 0xd0, 0x13, 0xd0, 0x9c, 0x0f,
	0xc4, 0x73, 0x29, 0xf6, 0x8d, 0xe6, 0xae, 0x7a, 0xd0, 0x19, 0xed, 0x0c, 0x65, 0xfc, 0xc3, 0x24,
	0xbc, 0xe1, 0xb1, 0xb4, 0x9e, 0xf8, 0x8c, 0x5e, 0x59, 0x99, 0xb3, 0xf9, 0x1d, 0x74, 0x0b, 0x26,
	0xa4, 0x83, 0xfa, 0x11, 0x5f, 0xc9, 0x67, 0x24, 0x4b, 0xd4, 0x87, 0xc6, 0xdc, 0xf6, 0x62, 0xcc,
	0x9f, 0xa1, 0x59, 0x62, 0xf3, 0x4c, 0x79, 0x5a, 0x1b, 0xfc, 0xa1, 0x40, 0xcb, 0xc2, 0xa1, 0x47,
	0x1c, 0xfb, 0xc6, 0xef, 0xbf, 0x03, 0x9a, 0x37, 0x8f, 0x26, 0xdc, 0x57, 0xe5, 0x78, 0xcb, 0x9b,
	0x47, 0x3f, 0x27, 0xee, 0xd2, 0xc4, 0x8f, 0xd4, 0x33, 0xd3, 0xdb, 0x25, 0xd5, 0x1a, 0xeb, 0x55,
	0x6b, 0x2e, 0xa9, 0xf6, 0x1c, 0xda, 0x91, 0x6f, 0x87, 0xd1, 0x87, 0x80, 0x45, 0x46, 0x8b, 0xcb,
	0x73, 0x3f, 0x93, 0x47, 0x3e, 0x60, 0x78, 0x9e, 0x7a, 0x08, 0x89, 0x16, 0x27, 0xd0, 0x3d, 0x00,
	0x8a, 0x2f, 0x63, 0xe2, 0xb9, 0xc4, 0x9f, 0x1a, 0x1a, 0x57, 0x21, 0x87, 0x98, 0xaf, 0xa0, 0x57,
	0x3c, 0x5c, 0x21, 0xe2, 0x5e, 0x5e, 0xc4, 0xce, 0xa8, 0x5b, 0xc8, 0x4e, 0x5e, 0xd3, 0xdf, 0x6b,
	0xd0, 0x97, 0x21, 0x1d, 0x53, 0x6c, 0x33, 0x6c, 0xe1, 0x4f, 0x31, 0x8e, 0x58, 0xa5, 0xc0, 0x79,
	0x31, 0x95, 0xd5, 0x62, 0xaa, 0x6b, 0xc4, 0xac, 0x97, 0xc4, 0x7c, 0x00, 0x1b, 0xf8, 0x97, 0x30,
	0x88, 0xf0, 0x84, 0xe2, 0x4f, 0x31, 0xa1, 0xd8, 0xe5, 0x7a, 0x6b, 0x56, 0x4f, 0xc0, 0x96, 0x44,
	0x07, 0x6f, 0xb3, 0x38, 0xc7, 0xd8, 0xc3, 0xeb, 0xe3, 0x7c, 0x08, 0xba, 0xe3, 0x61, 0xdb, 0x8f,
	0xc3, 0x05, 0xab, 0xa8, 0xa6, 0x0d, 0x89, 0x67, 0xb4, 0x0f, 0x60, 0x53, 0xd2, 0xfe, 0x80, 0xd9,
	0x1a, 0xce, 0xc1, 0x9f, 0x2a, 0x34, 0x4f, 0xfc, 0x29, 0xf1, 0xf1, 0x7f, 0xd4, 0x7b, 0x3d, 0x50,
	0x48, 0x28, 0xfb, 0x4e, 0x21, 0x61, 0x72, 0x43, 0x18, 0x50, 0xc6, 0xeb, 0xad, 0x61, 0xf1, 0x35,
	0x7a, 0x07, 0x5b, 0x54, 0x44, 0x3f, 0xb1, 0x5d, 0x97, 0xe2, 0x28, 0x9a, 0xcc, 0xec, 0x50, 0xd6,
	0xdc, 0x7e, 0x96, 0x74, 0x11, 0x77, 0x5a, 0x7a, 0x47, 0xc2, 0xf3, 0xcc, 0x0e, 0x45, 0xe9, 0x6d,
	0xd2, 0x32, 0x8e, 0xce, 0x40, 0x4f, 0x79, 0x67, 0x81, 0x8b, 0x39, 0xa9, 0xc6, 0x49, 0xf7, 0x56,
	0x90, 0x9e, 0x05, 0x2e, 0xce, 0x18, 0x7b, 0xb4, 0x00, 0x22, 0x13, 0x34, 0xec, 0xbb, 0x61, 0x40,
	0x7c, 0x66, 0xb4, 0xf9, 0x83, 0xb2, 0xbd, 0x39, 0x86, 0xed, 0xea, 0xb8, 0xae, 0x1b, 0x0d, 0xed,
	0x5c, 0x19, 0x9b, 0x17, 0xb0, 0x55, 0x11, 0x48, 0x05, 0xc5, 0x61, 0x9e, 0xa2, 0x37, 0xea, 0x97,
	0xfb, 0x32, 0x39, 0x9e, 0xef, 0x8f, 0xdf, 0x14, 0xd8, 0x12, 0x2f, 0xbd, 0xbe, 0x3d, 0x0a, 0xf9,
	0x56, 0x4a, 0xf9, 0x76, 0xaa, 0x53, 0xa5, 0x72, 0x55, 0x1f, 0x97, 0x54, 0x2d, 0xdc, 0xf5, 0x37,
	0xf2, 0x66, 0x82, 0xf6, 0x9e, 0x06, 0x3e, 0xc3, 0x7e, 0x3a, 0xd2, 0xb2, 0xfd, 0xbf, 0x23, 0xf4,
	0xe0, 0x61, 0x2a, 0xc7, 0xb5, 0x5d, 0x38, 0xd8, 0x07, 0x5d, 0xb8, 0x5e, 0xd3, 0x59, 0x2f, 0x61,
	0x23, 0x9d, 0x67, 0xeb, 0xd4, 0xdd, 0x83, 0x6e, 0x3a, 0x23, 0xf3, 0x13, 0xe8, 0x56, 0x0a, 0x26,
	0x63, 0x68, 0xf0, 0xab, 0x0a, 0xdd, 0x77, 0x98, 0x46, 0x24, 0xf0, 0x5f, 0xc7, 0x2c, 0x8c, 0x19,
	0x32, 0xa0, 0x35, 0x17, 0x80, 0x64, 0x4b, 0xb7, 0xe8, 0x2e, 0xb4, 0xa7, 0x84, 0x1d, 0x07, 0xb3,
	0x19, 0x61, 0x92, 0x6c, 0x01, 0x24, 0x56, 0x3e, 0x71, 0xc7, 0x36, 0x4b, 0xff, 0x39, 0x16, 0x00,
	0xfa, 0x1a, 0xba, 0x8e, 0x47, 0x8e, 0xde, 0x9c, 0xca, 0xcb, 0xb8, 0xda, 0xaa, 0x55, 0x04, 0xd1,
	0x61, 0x32, 0x87, 0x12, 0xe0, 0x8c, 0xf8, 0xa9, 0x63, 0x83, 0x3b, 0x2e, 0xe1, 0x68, 0x04, 0x7d,
	0x27, 0xf0, 0x19, 0x0d, 0x3c, 0x0f, 0xd3, 0x1c, 0x71, 0x93, 0xfb, 0x57, 0xda, 0xd0, 0x53, 0xf8,
	0x7f, 0x01, 0xcf, 0x5d, 0xd3, 0xe2, 0xc7, 0x56, 0x99, 0xd1, 0x37, 0xb0, 0xe9, 0xda, 0xcc, 0x7e,
	0x11, 0xd0, 0x99, 0xcd, 0xd2, 0x33, 0x1a, 0x3f, 0xb3, 0x6c, 0x48, 0x62, 0x5b, 0x80, 0xb9, 0x4b,
	0xda, 0x22, 0xb6, 0x2a, 0xdb, 0xe0, 0x14, 0x6e, 0xcb, 0xe5, 0x18, 0x33, 0x9b, 0x78, 0xbc, 0x08,
	0x42, 0xef, 0x0a, 0x7d, 0x5b, 0x4c, 0x48, 0x67, 0xb4, 0x9d, 0x15, 0x7f, 0x21, 0x73, 0x59, 0xa2,
	0x0e, 0xf7, 0xa1, 0x93, 0xeb, 0x4e, 0xd4, 0x04, 0xe5, 0xe2, 0xb5, 0xfe, 0xbf, 0xe4, 0xd7, 0xba,
	0xd0, 0x6b, 0xa8, 0x05, 0xea, 0x89, 0x65, 0xe9, 0xca, 0xe8, 0x4b, 0x03, 0x3a, 0xe7, 0x6f, 0xc6,
	0xaf, 0xce, 0x31, 0x9d, 0x13, 0x07, 0xa3, 0xef, 0xa1, 0x5b, 0xf8, 0x6b, 0x43, 0x5f, 0x95, 0xbb,
	0xbd, 0xd0, 0x67, 0xa6, 0x5e, 0x36, 0xa3, 0x17, 0x19, 0x83, 0x28, 0xf7, 0x65, 0x86, 0x42, 0x1b,
	0x98, 0xdb, 0x43, 0xf1, 0xf1, 0x36, 0x4c, 0x3f, 0xde, 0x86, 0x27, 0xc9, 0xc7, 0x1b, 0x7a, 0x06,
	0xb0, 0xf8, 0x97, 0x41, 0x66, 0x99, 0x64, 0xd1, 0x20, 0x15, 0x31, 0x1c, 0xc3, 0x6d, 0xb9, 0x4c,
	0xbb, 0x44, 0xbe, 0xc6, 0xc8, 0x5c, 0x4b, 0xed, 0x53, 0x41, 0x72, 0xba, 0x44, 0x22, 0x1f, 0xb4,
	0x9a, 0x64, 0xd5, 0x5b, 0x9e, 0xc3, 0xad, 0xfc, 0x90, 0x42, 0x77, 0xd7, 0xcd, 0x2e, 0x73, 0xa3,
	0x64, 0x45, 0xe3, 0xf4, 0xb8, 0x0c, 0xa0, 0x7c, 0xfc, 0x66, 0x82, 0x3e, 0x81, 0x76, 0x36, 0x5b,
	0xd0, 0x9d, 0x12, 0x45, 0x4e, 0xce, 0xa5, 0xeb, 0x8f, 0xa0, 0x2f, 0x56, 0x37, 0x16, 0x73, 0x89,
	0xe2, 0xc7, 0x32, 0xc5, 0x3f, 0x96, 0xf2, 0x25, 0xe8, 0xe5, 0x1e, 0x41, 0x2b, 0x7c, 0xcd, 0x7b,
	0xe5, 0x2e, 0x29, 0xb6, 0xd5, 0x65, 0x93, 0xfb, 0x3f, 0xfe, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x75,
	0x11, 0x8a, 0xfe, 0x54, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SPDKServiceClient is the client API for SPDKService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SPDKServiceClient interface {
	ReplicaCreate(ctx context.Context, in *ReplicaCreateRequest, opts ...grpc.CallOption) (*Replica, error)
	ReplicaDelete(ctx context.Context, in *ReplicaDeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ReplicaGet(ctx context.Context, in *ReplicaGetRequest, opts ...grpc.CallOption) (*Replica, error)
	ReplicaSnapshotCreate(ctx context.Context, in *SnapshotRequest, opts ...grpc.CallOption) (*Replica, error)
	ReplicaSnapshotDelete(ctx context.Context, in *SnapshotRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	EngineCreate(ctx context.Context, in *EngineCreateRequest, opts ...grpc.CallOption) (*Engine, error)
	EngineDelete(ctx context.Context, in *EngineDeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	EngineGet(ctx context.Context, in *EngineGetRequest, opts ...grpc.CallOption) (*Engine, error)
	EngineSnapshotCreate(ctx context.Context, in *SnapshotRequest, opts ...grpc.CallOption) (*Engine, error)
	EngineSnapshotDelete(ctx context.Context, in *SnapshotRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	VersionDetailGet(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VersionDetailGetReply, error)
}

type sPDKServiceClient struct {
	cc *grpc.ClientConn
}

func NewSPDKServiceClient(cc *grpc.ClientConn) SPDKServiceClient {
	return &sPDKServiceClient{cc}
}

func (c *sPDKServiceClient) ReplicaCreate(ctx context.Context, in *ReplicaCreateRequest, opts ...grpc.CallOption) (*Replica, error) {
	out := new(Replica)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/ReplicaCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) ReplicaDelete(ctx context.Context, in *ReplicaDeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/ReplicaDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) ReplicaGet(ctx context.Context, in *ReplicaGetRequest, opts ...grpc.CallOption) (*Replica, error) {
	out := new(Replica)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/ReplicaGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) ReplicaSnapshotCreate(ctx context.Context, in *SnapshotRequest, opts ...grpc.CallOption) (*Replica, error) {
	out := new(Replica)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/ReplicaSnapshotCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) ReplicaSnapshotDelete(ctx context.Context, in *SnapshotRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/ReplicaSnapshotDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) EngineCreate(ctx context.Context, in *EngineCreateRequest, opts ...grpc.CallOption) (*Engine, error) {
	out := new(Engine)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/EngineCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) EngineDelete(ctx context.Context, in *EngineDeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/EngineDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) EngineGet(ctx context.Context, in *EngineGetRequest, opts ...grpc.CallOption) (*Engine, error) {
	out := new(Engine)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/EngineGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) EngineSnapshotCreate(ctx context.Context, in *SnapshotRequest, opts ...grpc.CallOption) (*Engine, error) {
	out := new(Engine)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/EngineSnapshotCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) EngineSnapshotDelete(ctx context.Context, in *SnapshotRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/EngineSnapshotDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sPDKServiceClient) VersionDetailGet(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VersionDetailGetReply, error) {
	out := new(VersionDetailGetReply)
	err := c.cc.Invoke(ctx, "/spdkrpc.SPDKService/VersionDetailGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SPDKServiceServer is the server API for SPDKService service.
type SPDKServiceServer interface {
	ReplicaCreate(context.Context, *ReplicaCreateRequest) (*Replica, error)
	ReplicaDelete(context.Context, *ReplicaDeleteRequest) (*empty.Empty, error)
	ReplicaGet(context.Context, *ReplicaGetRequest) (*Replica, error)
	ReplicaSnapshotCreate(context.Context, *SnapshotRequest) (*Replica, error)
	ReplicaSnapshotDelete(context.Context, *SnapshotRequest) (*empty.Empty, error)
	EngineCreate(context.Context, *EngineCreateRequest) (*Engine, error)
	EngineDelete(context.Context, *EngineDeleteRequest) (*empty.Empty, error)
	EngineGet(context.Context, *EngineGetRequest) (*Engine, error)
	EngineSnapshotCreate(context.Context, *SnapshotRequest) (*Engine, error)
	EngineSnapshotDelete(context.Context, *SnapshotRequest) (*empty.Empty, error)
	VersionDetailGet(context.Context, *empty.Empty) (*VersionDetailGetReply, error)
}

// UnimplementedSPDKServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSPDKServiceServer struct {
}

func (*UnimplementedSPDKServiceServer) ReplicaCreate(ctx context.Context, req *ReplicaCreateRequest) (*Replica, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicaCreate not implemented")
}
func (*UnimplementedSPDKServiceServer) ReplicaDelete(ctx context.Context, req *ReplicaDeleteRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicaDelete not implemented")
}
func (*UnimplementedSPDKServiceServer) ReplicaGet(ctx context.Context, req *ReplicaGetRequest) (*Replica, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicaGet not implemented")
}
func (*UnimplementedSPDKServiceServer) ReplicaSnapshotCreate(ctx context.Context, req *SnapshotRequest) (*Replica, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicaSnapshotCreate not implemented")
}
func (*UnimplementedSPDKServiceServer) ReplicaSnapshotDelete(ctx context.Context, req *SnapshotRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicaSnapshotDelete not implemented")
}
func (*UnimplementedSPDKServiceServer) EngineCreate(ctx context.Context, req *EngineCreateRequest) (*Engine, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EngineCreate not implemented")
}
func (*UnimplementedSPDKServiceServer) EngineDelete(ctx context.Context, req *EngineDeleteRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EngineDelete not implemented")
}
func (*UnimplementedSPDKServiceServer) EngineGet(ctx context.Context, req *EngineGetRequest) (*Engine, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EngineGet not implemented")
}
func (*UnimplementedSPDKServiceServer) EngineSnapshotCreate(ctx context.Context, req *SnapshotRequest) (*Engine, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EngineSnapshotCreate not implemented")
}
func (*UnimplementedSPDKServiceServer) EngineSnapshotDelete(ctx context.Context, req *SnapshotRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EngineSnapshotDelete not implemented")
}
func (*UnimplementedSPDKServiceServer) VersionDetailGet(ctx context.Context, req *empty.Empty) (*VersionDetailGetReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VersionDetailGet not implemented")
}

func RegisterSPDKServiceServer(s *grpc.Server, srv SPDKServiceServer) {
	s.RegisterService(&_SPDKService_serviceDesc, srv)
}

func _SPDKService_ReplicaCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicaCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).ReplicaCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/ReplicaCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).ReplicaCreate(ctx, req.(*ReplicaCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_ReplicaDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicaDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).ReplicaDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/ReplicaDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).ReplicaDelete(ctx, req.(*ReplicaDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_ReplicaGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicaGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).ReplicaGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/ReplicaGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).ReplicaGet(ctx, req.(*ReplicaGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_ReplicaSnapshotCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).ReplicaSnapshotCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/ReplicaSnapshotCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).ReplicaSnapshotCreate(ctx, req.(*SnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_ReplicaSnapshotDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).ReplicaSnapshotDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/ReplicaSnapshotDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).ReplicaSnapshotDelete(ctx, req.(*SnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_EngineCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EngineCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).EngineCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/EngineCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).EngineCreate(ctx, req.(*EngineCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_EngineDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EngineDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).EngineDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/EngineDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).EngineDelete(ctx, req.(*EngineDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_EngineGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EngineGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).EngineGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/EngineGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).EngineGet(ctx, req.(*EngineGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_EngineSnapshotCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).EngineSnapshotCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/EngineSnapshotCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).EngineSnapshotCreate(ctx, req.(*SnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_EngineSnapshotDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).EngineSnapshotDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/EngineSnapshotDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).EngineSnapshotDelete(ctx, req.(*SnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SPDKService_VersionDetailGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SPDKServiceServer).VersionDetailGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/spdkrpc.SPDKService/VersionDetailGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SPDKServiceServer).VersionDetailGet(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _SPDKService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "spdkrpc.SPDKService",
	HandlerType: (*SPDKServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReplicaCreate",
			Handler:    _SPDKService_ReplicaCreate_Handler,
		},
		{
			MethodName: "ReplicaDelete",
			Handler:    _SPDKService_ReplicaDelete_Handler,
		},
		{
			MethodName: "ReplicaGet",
			Handler:    _SPDKService_ReplicaGet_Handler,
		},
		{
			MethodName: "ReplicaSnapshotCreate",
			Handler:    _SPDKService_ReplicaSnapshotCreate_Handler,
		},
		{
			MethodName: "ReplicaSnapshotDelete",
			Handler:    _SPDKService_ReplicaSnapshotDelete_Handler,
		},
		{
			MethodName: "EngineCreate",
			Handler:    _SPDKService_EngineCreate_Handler,
		},
		{
			MethodName: "EngineDelete",
			Handler:    _SPDKService_EngineDelete_Handler,
		},
		{
			MethodName: "EngineGet",
			Handler:    _SPDKService_EngineGet_Handler,
		},
		{
			MethodName: "EngineSnapshotCreate",
			Handler:    _SPDKService_EngineSnapshotCreate_Handler,
		},
		{
			MethodName: "EngineSnapshotDelete",
			Handler:    _SPDKService_EngineSnapshotDelete_Handler,
		},
		{
			MethodName: "VersionDetailGet",
			Handler:    _SPDKService_VersionDetailGet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "spdk.proto",
}
