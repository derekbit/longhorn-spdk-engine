#!/bin/bash
set -e

cd "$(dirname $0)"/..

echo Running unit tests

# in case there is error before calling go test ...
touch coverage.out

# Check if hugepages are configured
hugepages="$(grep HugePages_Total < /proc/meminfo | awk '{print $2}')"
if [ -z "$hugepages" ] || [ 1 -gt $hugepages ]
then
  echo No hugepages configured on the host for the test
  exit 1
fi

mount --rbind /host/dev /dev
mount --rbind /host/sys /sys
mkdir /home/runner
mount --rbind /host/home/runner /home/runner

ulimit -c unlimited
echo "/home/runner/core.%h.%e.%p.%t" > /proc/sys/kernel/core_pattern

# if /dev/hugepages  is not exist, create it (not use -d)
echo "Checking /dev/hugepages"
if [ ! -f /dev/hugepages ]; then
  echo "Creating /dev/hugepages"
  mkdir -p /dev/hugepages
  mount -t hugetlbfs nodev /dev/hugepages
fi

trap "umount /dev && umount /sys && umount /home/runner" EXIT

# Do cleanup first
losetup -D
trap "losetup -D" EXIT

PACKAGES="$(find . -name '*.go' -print0 | xargs -0 -I{} dirname {} |  cut -f2 -d/ | sort -u | grep -Ev '(^\.$|.git|.trash-cache|vendor|bin)' | sed -e 's!^!./!' -e 's!$!/...!')"

trap "rm -f /tmp/test-disk" EXIT

go test -v -race -cover ${PACKAGES} -coverprofile=coverage.out -timeout 60m
